initSidebarItems({"enum":[["SyntaxKind","The kind of syntax node, e.g. Ident, `UseKw`, or `Struct`."],["WalkEvent","`WalkEvent` describes tree walking process."]],"fn":[["tokenize","Tokenize text into a vector of tokens and errors"],["tokenizer","Returns a tokenizer iterator that will turn the source text into tokens"]],"macro":[["N","A helper macro to get the node"],["T","A helper macro to get the token"],["match_ast","Matches a `SyntaxNode` against an `ast` type."]],"mod":[["ast",""]],"struct":[["AstPtr",""],["Parse","`Parse` is the result of the parsing: a syntax tree and a collection of errors."],["SourceFile",""],["SyntaxError",""],["SyntaxNodePtr",""],["TextRange","A range in text, represented as a pair of [`TextSize`][struct@TextSize]."],["TextSize","A measure of text length. Also, equivalently, an index into text."],["Token","A lua token"],["TokenText",""]],"type":[["SyntaxElement",""],["SyntaxElementChildren",""],["SyntaxNode",""],["SyntaxNodeChildren",""],["SyntaxToken",""]]});