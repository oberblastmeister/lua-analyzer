var searchIndex = JSON.parse('{\
"accept":{"doc":"A library to create lexers or anything that does …","t":[0,8,16,10,11,11,10,11,11,10,3,11,11,11,11,11,0,3,12,3,12,3,12,3,12,3,12,3,12,3,12,12,8,10,11,8,11,11,11,8,11,11,11,11,11,3,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["source","Source","Item","advance","bump_raw","bump_expect","nth","current","is_eof","nth_is_eof","CharSource","new","chars","chars_len","pos","rest","combinators","Seq","0","And","0","Or","0","Not","0","While","0","Until","0","Repeat","0","1","Lexable","nth","peek","Accept","accept","accept_count","bump","Acceptor","at","bump","bump_then","accept","accept_count","Any","_seq","_and","_or","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","advance","nth","is_eof","nth_is_eof","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept_count","accept","accept_count","accept","clone","clone","clone","clone","clone","clone","clone","clone","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","at","bump","bump_then","accept","accept_count","peek","accept","accept_count","bump"],"q":["accept","accept::source","","","","","","","","","","","","","","","accept","accept::combinators","","","","","","","","","","","","","","","accept","","","","","","","","","","","","","","","","","accept::source","","","","","","","accept::combinators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","accept","","","","","","","","","accept::source","","","","accept::combinators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","accept","accept::combinators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","accept","accept::combinators","","","","","","","","","","","","","","","","","","","","","accept","","","","","","","",""],"d":["","A trait that defines the source that a lexer or parser …","","Advance the source.","Bump the source. This advances the source but panics if …","Bump the source. This advances the source but panics if …","Get the nth item;","Get the current item. Equivalent to doing <code>self.nth(0)</code>.","Check if the current item is eof. Equivalent to doing …","Check is the nth item is eof.","A simple source that works on chars.","","","","Returns amount of already consumed chars.","The rest of the str that hasn’t been consumed yet","Some structs that can be used to combined different …","","","","","","","","","","","","","","","","Something that can be lexed. This is implemented for most …","","","","","","","An acceptor is something that can accept things from a …i":[0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,0,0,3,0,4,0,5,0,6,0,7,0,8,0,9,9,0,10,10,0,11,11,11,0,12,12,12,12,12,0,0,0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,13,13,13,13,13,13,13,13,13,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,6,7,8,9,13,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,7,7,8,8,9,3,4,5,6,7,8,9,13,3,3,4,4,5,5,6,6,7,7,8,8,9,9,3,4,5,6,7,8,9,12,12,12,12,12,10,11,11,11],"f":[null,null,null,[[],["option",4]],[[]],[[["str",15]]],[[["u32",15]]],[[]],[[],["bool",15]],[[["u32",15]],["bool",15]],null,[[["str",15]],["charsource",3]],[[],["chars",3]],[[],["u32",15]],[[],["u32",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["u32",15]],[[]],null,[[["lexable",8]],["bool",15]],[[["accept",8]]],[[["accept",8]]],[[["accept",8]],["bool",15]],[[["accept",8]],["u32",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["char",15],["option",4]]],[[["u32",15]],["char",15]],[[],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["bool",15]],[[],["u32",15]],[[],["bool",15]],[[],["seq",3]],[[],["and",3]],[[],["or",3]],[[],["not",3]],[[],["while",3]],[[],["until",3]],[[],["repeat",3]],[[],["any",3]],[[["seq",3]],["bool",15]],[[["seq",3]],["bool",15]],[[["and",3]],["bool",15]],[[["and",3]],["bool",15]],[[["or",3]],["bool",15]],[[["or",3]],["bool",15]],[[["not",3]],["bool",15]],[[["not",3]],["bool",15]],[[["while",3]],["bool",15]],[[["while",3]],["bool",15]],[[["until",3]],["bool",15]],[[["until",3]],["bool",15]],[[["repeat",3]],["bool",15]],[[["repeat",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["lexable",8]],["bool",15]],[[["accept",8]]],[[["accept",8]]],[[["accept",8]],["bool",15]],[[["accept",8]],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[]]],"p":[[8,"Source"],[3,"CharSource"],[3,"Seq"],[3,"And"],[3,"Or"],[3,"Not"],[3,"While"],[3,"Until"],[3,"Repeat"],[8,"Lexable"],[8,"Accept"],[8,"Acceptor"],[3,"Any"]]},\
"base_db":{"doc":"","t":[3,3,12,3,12,8,10,8,10,11,8,10,10,10,10,3,3,11,11,3,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Canceled","Change","files_changed","FileId","0","Upcast","upcast","CheckCanceled","check_canceled","catch_canceled","SourceDatabase","parse","file_text","set_file_text","set_file_text_with_durability","SourceDatabaseStorage","ParseQuery","in_db","in_db_mut","FileTextQuery","in_db","in_db_mut","SourceDatabaseGroupStorage__","parse","file_text","new","fmt_index","maybe_changed_since","for_each_query","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","cmp","clone","hash","partial_cmp","eq","ne","fmt","clone","default","default","default","eq","ne","fmt","fmt","fmt","fmt","fmt","hash","execute","query_storage","query_storage","throw","new","apply","change_file"],"q":["base_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An “error” signifying that the operation was canceled.","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","","","","Aborts current query if there are pending changes.","","Database which stores all significant input facts: source …","","","Set the value of the <code>file_text</code> input.","Set the value of the <code>file_text</code> input and promise that its …","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,2,0,3,0,4,4,0,5,5,5,5,0,0,6,6,0,7,7,0,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,10,10,10,10,10,10,10,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,2,2,2,2,2,2,2,9,1,6,7,9,9,9,1,6,7,9,9,6,6,7,9,1,1,1],"f":[null,null,null,null,null,null,[[]],null,[[]],[[],[["canceled",3],["result",4]]],null,[[["fileid",3]],[["parse",3],["sourcefile",3]]],[[["fileid",3]],[["string",3],["arc",3]]],[[["fileid",3],["string",3],["arc",3]]],[[["fileid",3],["arc",3],["durability",3],["string",3]]],null,null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],null,null,null,[[["u16",15]]],[[["sourcedatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["sourcedatabase",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["fileid",3]],["ordering",4]],[[],["fileid",3]],[[]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["canceled",3]],[[],["change",3]],[[],["parsequery",3]],[[],["filetextquery",3]],[[["canceled",3]],["bool",15]],[[["canceled",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["arc",3]],[[],["arc",3]],[[]],[[],["change",3]],[[["sourcedatabase",8]]],[[["fileid",3],["arc",3],["option",4]]]],"p":[[3,"Change"],[3,"FileId"],[8,"Upcast"],[8,"CheckCanceled"],[8,"SourceDatabase"],[3,"ParseQuery"],[3,"FileTextQuery"],[3,"SourceDatabaseGroupStorage__"],[3,"Canceled"],[3,"SourceDatabaseStorage"]]},\
"binding_powers":{"doc":"","t":[17,17,17,17,17,17,17,17,8,10,10,10,10,4,13,13,3,4,13,13,13,3,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NOT_AN_OP","NOT_AN_OP_INFIX","NOT_AN_OP_POSTFIX","NOT_AN_OP_PREFIX","LOWEST","LOWEST_INFIX","LOWEST_POSTFIX","LOWEST_PREFIX","Operator","to_id","prefix_power","infix_power","postfix_power","Assoc","Left","Right","Precedences","PrecType","Infix","Prefix","Postfix","BindingPowers","new","get_infix","get_postfix","get_prefix","precedences","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","fmt","fmt","fmt","fmt"],"q":["binding_powers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,3,3,3,0,4,4,4,4,0,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,2,5,3,4,2,5,3,4],"f":[null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["bindingpowers",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["assoc",4]],[[],["precedences",3]],[[],["prectype",4]],[[],["bindingpowers",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"Operator"],[4,"Assoc"],[4,"PrecType"],[3,"BindingPowers"],[3,"Precedences"]]},\
"binding_powers_impl":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"hir":{"doc":"","t":[0,3,12,12,12,12,12,12,0,3,6,4,13,13,13,13,12,12,12,13,12,12,13,12,12,13,12,12,13,12,12,13,3,3,12,12,11,3,4,13,12,13,13,3,3,3,4,13,13,13,13,13,0,6,4,13,13,12,12,13,13,12,12,13,12,12,13,13,12,12,13,13,12,13,12,13,12,4,13,12,12,12,12,13,12,12,3,3,3,12,8,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,12,12,11,11,11,11,8,10,10,3,3,11,11,3,12,11,11,11,11,8,10,10,3,3,11,11,3,11,11,3,12,12,11,11,11,11,8,3,3,11,11,11,11,8,16,10,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["body","Body","exprs","stmts","labels","names","params","body_stmt","expr","Label","ExprId","Expr","Missing","Call","Literal","BinaryOp","lhs","op","rhs","UnaryOp","op","expr","Index","base","index","Dot","base","index","Function","params","body","Table","MultivalExpr","ParamList","names","vararg","shrink_to_fit","Call","CallArgs","ArgList","args","Str","Table","BinaryOp","UnaryOp","Table","Literal","Str","Bool","Number","Nil","Vararg","stmt","StmtId","Stmt","Missing","Assign","lhs","rhs","Do","While","condition","body","For","content","body","Call","If","condition","body","Break","Return","expr","Label","name","Goto","name","ForContent","Numeric","name","start","end","increment","Generic","multi_name","expr","Block","BlockLoc","Semantics","db","InternDatabase","intern_function","lookup_intern_function","intern_local_function","lookup_intern_local_function","intern_local_assign","lookup_intern_local_assign","InternDatabaseStorage","InternFunctionQuery","in_db","in_db_mut","InternFunctionLookupQuery","in_db","in_db_mut","InternLocalFunctionQuery","in_db","in_db_mut","InternLocalFunctionLookupQuery","in_db","in_db_mut","InternLocalAssignQuery","in_db","in_db_mut","InternLocalAssignLookupQuery","in_db","in_db_mut","InternDatabaseGroupStorage__","intern_function","lookup_intern_function","intern_local_function","lookup_intern_local_function","intern_local_assign","lookup_intern_local_assign","new","fmt_index","maybe_changed_since","for_each_query","AstDatabase","ast_id_map","syntax_node","AstDatabaseStorage","AstIdMapQuery","in_db","in_db_mut","AstDatabaseGroupStorage__","ast_id_map","new","fmt_index","maybe_changed_since","for_each_query","DefDatabase","file_item_tree","body","DefDatabaseStorage","FileItemTreeQuery","in_db","in_db_mut","BodyQuery","in_db","in_db_mut","DefDatabaseGroupStorage__","file_item_tree","body","new","fmt_index","maybe_changed_since","for_each_query","HirDatabase","HirDatabaseStorage","HirDatabaseGroupStorage__","new","fmt_index","maybe_changed_since","for_each_query","Lookup","Data","lookup","InFile","file_id","value","new","with_value","map","as_ref","file_syntax","cloned","transpose","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","execute","execute","execute","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","to_node","new","parse"],"q":["hir","hir::body","","","","","","","hir","hir::expr","","","","","","","hir::expr::Expr","","","hir::expr","hir::expr::Expr","","hir::expr","hir::expr::Expr","","hir::expr","hir::expr::Expr","","hir::expr","hir::expr::Expr","","hir::expr","","","","","","","","","hir::expr::CallArgs","hir::expr","","","","","","","","","","","hir","hir::stmt","","","","hir::stmt::Stmt","","hir::stmt","","hir::stmt::Stmt","","hir::stmt","hir::stmt::Stmt","","hir::stmt","","hir::stmt::Stmt","","hir::stmt","","hir::stmt::Stmt","hir::stmt","hir::stmt::Stmt","hir::stmt","hir::stmt::Stmt","hir::stmt","","hir::stmt::ForContent","","","","hir::stmt","hir::stmt::ForContent","","hir::stmt","","hir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::body","","","","","","","","hir::expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir","","","","","","","hir::stmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::expr","","","","","","","","","","hir::stmt","","","","hir","hir::expr","hir","","","","","","","","","hir::body","","hir::expr","","","","","","","","","","","","","","","","hir::stmt","","","","","","","","hir","","hir::body","hir::expr","","","","","","","","","","hir::stmt","","","","hir","","","","","","","","","","hir::expr","hir::stmt","hir","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","Representative struct for the query group.","","","","","","","","","<code>InFile<T></code> stores a value of <code>T</code> inside a particular …i":[0,0,1,1,1,1,1,1,0,0,0,0,2,2,2,2,3,3,3,2,4,4,2,5,5,2,6,6,2,7,7,2,0,0,8,8,8,0,0,9,10,9,9,0,0,0,0,11,11,11,11,11,0,0,0,12,12,13,13,12,12,14,14,12,15,15,12,12,16,16,12,12,17,12,18,12,19,0,20,21,21,21,21,20,22,22,0,0,0,23,0,24,24,24,24,24,24,0,0,25,25,0,26,26,0,27,27,0,28,28,0,29,29,0,30,30,0,31,31,31,31,31,31,31,31,31,31,0,32,32,0,0,33,33,0,34,34,34,34,34,0,35,35,0,0,36,36,0,37,37,0,38,38,38,38,38,38,0,0,0,39,39,39,39,0,40,40,0,41,41,41,41,41,41,41,41,41,1,1,1,1,1,1,1,1,42,42,42,42,42,42,42,42,42,42,2,2,2,2,2,2,2,2,2,2,43,43,43,43,43,43,43,43,43,43,8,8,8,8,8,8,8,8,8,8,44,44,44,44,44,44,44,44,44,44,9,9,9,9,9,9,9,9,9,9,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,11,11,11,11,11,11,11,11,11,11,23,23,23,23,23,23,23,12,12,12,12,12,12,12,12,12,12,20,20,20,20,20,20,20,20,20,20,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,51,51,51,51,51,51,51,33,33,33,33,33,33,33,34,34,34,34,34,34,34,52,52,52,52,52,52,52,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,53,53,53,53,53,53,53,39,39,39,39,39,39,39,41,41,41,41,41,41,41,41,41,41,42,2,43,8,44,9,45,46,47,11,12,20,48,49,41,8,25,26,27,28,29,30,33,36,37,1,1,42,42,2,2,43,8,8,44,44,9,9,45,46,47,11,11,12,12,20,20,48,48,49,49,41,41,1,42,2,43,8,44,9,45,46,47,11,12,20,48,49,25,26,27,28,29,30,33,36,37,41,8,49,41,33,36,37,25,26,27,28,29,30,33,36,37,41,23,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["itemtreeid",3],["function",3]],["functionid",3]],[[["functionid",3]],[["itemtreeid",3],["function",3]]],[[["itemtreeid",3],["localfunction",3]],["localfunctionid",3]],[[["localfunctionid",3]],[["localfunction",3],["itemtreeid",3]]],[[["itemtreeid",3],["localassign",3]],["localassignid",3]],[[["localassignid",3]],[["itemtreeid",3],["localassign",3]]],null,null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,null,null,null,null,null,null,[[["u16",15]]],[[["interndatabase",8],["formatter",3],["databasekeyindex",3]],["result",6]],[[["interndatabase",8],["revision",3],["databasekeyindex",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,[[["fileid",3]],[["astidmap",3],["arc",3]]],[[["fileid",3]],["syntaxnode",6]],null,null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,null,[[["u16",15]]],[[["databasekeyindex",3],["formatter",3],["astdatabase",8]],["result",6]],[[["databasekeyindex",3],["revision",3],["astdatabase",8]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,[[["fileid",3]],[["itemtree",3],["arc",3]]],[[["withbodyid",4]],[["body",3],["arc",3]]],null,null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["formatter",3],["defdatabase",8]],["result",6]],[[["databasekeyindex",3],["revision",3],["defdatabase",8]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["formatter",3],["hirdatabase",8]],["result",6]],[[["databasekeyindex",3],["revision",3],["hirdatabase",8]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,null,[[["defdatabase",8]]],null,null,null,[[["fileid",3]],["infile",3]],[[],["infile",3]],[[["fnonce",8]],["infile",3]],[[],["infile",3]],[[["astdatabase",8]],["syntaxnode",6]],[[],["infile",3]],[[],[["infile",3],["option",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["label",3]],[[],["expr",4]],[[],["multivalexpr",3]],[[],["paramlist",3]],[[],["call",3]],[[],["callargs",4]],[[],["binaryop",3]],[[],["unaryop",3]],[[],["table",3]],[[],["literal",4]],[[],["stmt",4]],[[],["forcontent",4]],[[],["block",3]],[[],["blockloc",3]],[[],["infile",3]],[[],["paramlist",3]],[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internlocalfunctionquery",3]],[[],["internlocalfunctionlookupquery",3]],[[],["internlocalassignquery",3]],[[],["internlocalassignlookupquery",3]],[[],["astidmapquery",3]],[[],["fileitemtreequery",3]],[[],["bodyquery",3]],[[["body",3]],["bool",15]],[[["body",3]],["bool",15]],[[["label",3]],["bool",15]],[[["label",3]],["bool",15]],[[["expr",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["multivalexpr",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["call",3]],["bool",15]],[[["call",3]],["bool",15]],[[["callargs",4]],["bool",15]],[[["callargs",4]],["bool",15]],[[["binaryop",3]],["bool",15]],[[["unaryop",3]],["bool",15]],[[["table",3]],["bool",15]],[[["literal",4]],["bool",15]],[[["literal",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["forcontent",4]],["bool",15]],[[["forcontent",4]],["bool",15]],[[["block",3]],["bool",15]],[[["block",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["astdatabase",8]]],[[["hirdatabase",8]],["semantics",3]],[[["fileid",3]],["sourcefile",3]]],"p":[[3,"Body"],[4,"Expr"],[13,"BinaryOp"],[13,"UnaryOp"],[13,"Index"],[13,"Dot"],[13,"Function"],[3,"ParamList"],[4,"CallArgs"],[13,"ArgList"],[4,"Literal"],[4,"Stmt"],[13,"Assign"],[13,"While"],[13,"For"],[13,"If"],[13,"Return"],[13,"Label"],[13,"Goto"],[4,"ForContent"],[13,"Numeric"],[13,"Generic"],[3,"Semantics"],[8,"InternDatabase"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternLocalFunctionQuery"],[3,"InternLocalFunctionLookupQuery"],[3,"InternLocalAssignQuery"],[3,"InternLocalAssignLookupQuery"],[3,"InternDatabaseGroupStorage__"],[8,"AstDatabase"],[3,"AstIdMapQuery"],[3,"AstDatabaseGroupStorage__"],[8,"DefDatabase"],[3,"FileItemTreeQuery"],[3,"BodyQuery"],[3,"DefDatabaseGroupStorage__"],[3,"HirDatabaseGroupStorage__"],[8,"Lookup"],[3,"InFile"],[3,"Label"],[3,"MultivalExpr"],[3,"Call"],[3,"BinaryOp"],[3,"UnaryOp"],[3,"Table"],[3,"Block"],[3,"BlockLoc"],[3,"InternDatabaseStorage"],[3,"AstDatabaseStorage"],[3,"DefDatabaseStorage"],[3,"HirDatabaseStorage"]]},\
"ide":{"doc":"","t":[4,13,13,3,12,3,12,3,12,12,3,12,12,3,8,10,6,3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Severity","Error","WeakWarning","Change","files_changed","FileId","0","LineCol","line","col","LineColUtf16","line","col","LineIndex","LineIndexDatabase","line_index","Cancelable","AnalysisHost","new","analysis","apply_change","Analysis","file_line_index","diagnostics","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","default","fmt","cmp","clone","hash","partial_cmp","eq","ne","fmt","hash","hash","eq","ne","eq","ne","eq","ne","clone","clone","clone","fmt","fmt","fmt","clone","fmt","new","apply","change_file","new","line_col","offset","to_utf8","to_utf16"],"q":["ide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","","Zero-based","Zero-based utf8 offset","","Zero-based","Zero-based","","","","","","","Returns a snapshot of the current state, which you can …","Applies changes to the current state of the world. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,2,0,3,0,4,4,0,5,5,0,0,6,0,0,7,7,7,0,8,8,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,9,9,9,9,9,9,9,9,9,9,7,7,7,7,7,7,7,8,8,8,8,8,8,8,2,2,3,3,3,3,3,3,3,4,5,5,5,9,9,4,4,9,5,4,5,4,9,1,1,2,2,2,9,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["fileid",3]],[["arc",3],["lineindex",3]]],null,null,[[],["analysishost",3]],[[],["analysis",3]],[[["change",3]]],null,[[["fileid",3]],[["arc",3],["cancelable",6]]],[[["fileid",3]],[["vec",3],["cancelable",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["change",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["fileid",3]],["ordering",4]],[[],["fileid",3]],[[]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["linecolutf16",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[],["lineindex",3]],[[],["linecolutf16",3]],[[],["linecol",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["severity",4]],[[["formatter",3]],["result",6]],[[],["change",3]],[[["sourcedatabase",8]]],[[["fileid",3],["option",4],["arc",3]]],[[["str",15]],["lineindex",3]],[[["textsize",3]],["linecol",3]],[[["linecol",3]],["textsize",3]],[[["linecolutf16",3]],["linecol",3]],[[["linecol",3]],["linecolutf16",3]]],"p":[[4,"Severity"],[3,"Change"],[3,"FileId"],[3,"LineCol"],[3,"LineColUtf16"],[8,"LineIndexDatabase"],[3,"AnalysisHost"],[3,"Analysis"],[3,"LineIndex"]]},\
"ide_db":{"doc":"","t":[0,3,3,12,12,3,12,12,11,11,11,11,11,3,11,11,11,8,10,3,3,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["line_index","LineIndex","LineCol","line","col","LineColUtf16","line","col","new","line_col","offset","to_utf8","to_utf16","RootDatabase","request_cancellation","apply_change","new","LineIndexDatabase","line_index","LineIndexDatabaseStorage","LineIndexQuery","in_db","in_db_mut","LineIndexDatabaseGroupStorage__","line_index","new","fmt_index","maybe_changed_since","for_each_query","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","line_index","from","into","borrow","borrow_mut","try_from","try_into","type_id","parse","file_text","set_file_text","set_file_text_with_durability","check_canceled","file_item_tree","body","intern_function","lookup_intern_function","intern_local_function","lookup_intern_local_function","intern_local_assign","lookup_intern_local_assign","ast_id_map","syntax_node","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","hash","hash","upcast","upcast","upcast","upcast","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","fmt_index","maybe_changed_since","for_each_query","execute","on_propagated_panic","salsa_event","query_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","snapshot"],"q":["ide_db","ide_db::line_index","","","","","","","","","","","","ide_db","","","","","","","","","","","","","","","","ide_db::line_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::line_index","","","ide_db","ide_db::line_index","","","","","","","","","ide_db","","ide_db::line_index","","ide_db","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Zero-based","Zero-based utf8 offset","","Zero-based","Zero-based","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,2,2,3,3,3,3,3,0,4,4,4,0,5,0,0,6,6,0,7,7,7,7,7,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,6,6,6,6,6,6,6,7,7,7,7,7,7,7,3,1,2,6,3,3,1,1,2,2,3,1,2,4,6,1,2,4,4,4,4,4,4,4,4,4,4,6,4,4,6,4,4,4,4,4,4,4],"f":[null,null,null,null,null,null,null,null,[[["str",15]],["lineindex",3]],[[["textsize",3]],["linecol",3]],[[["linecol",3]],["textsize",3]],[[["linecolutf16",3]],["linecol",3]],[[["linecol",3]],["linecolutf16",3]],null,[[]],[[["change",3]]],[[],["rootdatabase",3]],null,[[["fileid",3]],[["lineindex",3],["arc",3]]],null,null,[[["lineindexdatabase",8]],["querytable",3]],[[["lineindexdatabase",8]],["querytablemut",3]],null,null,[[["u16",15]]],[[["lineindexdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["revision",3],["lineindexdatabase",8],["databasekeyindex",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["fileid",3]],[["lineindex",3],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["fileid",3]],[["parse",3],["sourcefile",3]]],[[["fileid",3]],[["string",3],["arc",3]]],[[["fileid",3],["string",3],["arc",3]]],[[["string",3],["arc",3],["fileid",3],["durability",3]]],[[]],[[["fileid",3]],[["arc",3],["itemtree",3]]],[[["withbodyid",4]],[["arc",3],["body",3]]],[[["itemtreeid",3],["function",3]],["functionid",3]],[[["functionid",3]],[["itemtreeid",3],["function",3]]],[[["itemtreeid",3],["localfunction",3]],["localfunctionid",3]],[[["localfunctionid",3]],[["itemtreeid",3],["localfunction",3]]],[[["itemtreeid",3],["localassign",3]],["localassignid",3]],[[["localassignid",3]],[["itemtreeid",3],["localassign",3]]],[[["fileid",3]],[["astidmap",3],["arc",3]]],[[["fileid",3]],[["syntaxnode",3],["lualanguage",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["lineindex",3]],[[],["linecol",3]],[[],["linecolutf16",3]],[[],["lineindexquery",3]],[[["lineindex",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["sourcedatabase",8]],[[],["defdatabase",8]],[[],["hirdatabase",8]],[[],["astdatabase",8]],[[],["database",8]],[[],["runtime",3]],[[],["runtime",3]],[[["databasekeyindex",3],["formatter",3]],["result",6]],[[["revision",3],["databasekeyindex",3]],["bool",15]],[[["fnmut",8]]],[[]],[[]],[[["event",3]]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["snapshot",3],["rootdatabase",3]]]],"p":[[3,"LineCol"],[3,"LineColUtf16"],[3,"LineIndex"],[3,"RootDatabase"],[8,"LineIndexDatabase"],[3,"LineIndexQuery"],[3,"LineIndexDatabaseGroupStorage__"],[3,"LineIndexDatabaseStorage"]]},\
"lua_analyzer":{"doc":"","t":[0,3,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["config","Config","new","update","library","server_capabilities","main_loop","from_json","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone","fmt"],"q":["lua_analyzer","lua_analyzer::config","","","","lua_analyzer","","","lua_analyzer::config","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[["abspathbuf",3],["clientcapabilities",3]]],[[["value",4]]],[[]],[[],["servercapabilities",3]],[[["config",3],["connection",3]],["result",6]],[[["value",4],["str",15]],[["deserializeowned",8],["result",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["config",3]],[[["formatter",3]],["result",6]]],"p":[[3,"Config"]]},\
"parser":{"doc":"","t":[4,13,12,12,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,12,12,11,11,8,10,10,10,10,8,16,10,10,10,10,10,10,10,5,3,11,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Event","Start","kind","forward_parent","Finish","StartError","FinishError","Token","Error","LuaOp","And","Concat","Div","Eq","Gt","GtEq","Len","Lt","LtEq","Minus","Mod","Mul","Not","NotEq","Or","Plus","Power","__LAST","ParseError","Message","Expected","expected","got","SyntaxKind","Unknown","Bang","Hash","Modulo","LParen","RParen","Asterisk","Plus","Comma","Minus","Dot","DoubleDot","TripleDot","Slash","Colon","DoubleColon","Semicolon","Lt","LtEq","Eq","EqEq","Gt","GtEq","LBracket","RBracket","Caret","LBrace","RBrace","NotEq","FunctionKw","LocalKw","TrueKw","FalseKw","IfKw","ThenKw","ElseKw","ElseifKw","WhileKw","ForKw","InKw","BreakKw","DoKw","GotoKw","AndKw","OrKw","NotKw","ReturnKw","EndKw","RepeatKw","UntilKw","NilKw","Number","Str","True","False","Error","Ident","Shebang","Name","NameRef","MultiName","SourceFile","Block","AssignStmt","LocalAssignStmt","LocalFunctionDefStmt","FunctionDefStmt","ForStmt","IfStmt","ReturnStmt","WhileStmt","ExprStmt","BreakStmt","RepeatUntilStmt","LabelStmt","GotoStmt","LabelDelim","DoStmt","ParamList","FunctionMethod","FunctionStatic","IndexPath","MultivalExpr","ElseBranch","ElseIfBranch","NumericFor","GenericFor","Literal","TableExpr","InfixExpr","PrefixExpr","IndexExpr","DotExpr","FunctionExpr","CallExpr","MethodCallExpr","CallArgs","ArgList","TableSep","ParenExpr","KeyValue","PositionalValue","Index","IdentKey","Stmt","StmtItem","FunctionDefContent","Expr","ForContent","TableContent","TableKey","Comment","Whitespace","TokenSet","Token","kind","len","with_range","new","TokenSource","current","lookahead_nth","bump","is_keyword","TreeSink","FinishResult","token","start_node","finish_node","start_error_node","finish_error_node","error","finish","parse","Reparser","for_node","parse","T","N","TS","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","clone","clone","clone","cmp","eq","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","nth","nth","to_id","infix_power","prefix_power","postfix_power","is_trivia","is_keyword","is_punct","is_literal","from_keyword","msg","expected"],"q":["parser","","parser::Event","","parser","","","","","","","","","","","","","","","","","","","","","","","","","","","parser::ParseError","","parserd":["TODO: add node error event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of syntax node, e.g. Ident, <code>UseKw</code>, or <code>Struct</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bit-set of <code>SyntaxKind</code>s","A lua token","The kind of token.","The length of the token.","","","<code>Token</code> abstracts the cursor of <code>TokenSource</code> operates on.","","Lookahead n token","bump cursor to next token","Is the current token a specified keyword?","<code>TreeSink</code> abstracts details of a particular syntax tree …","","Adds new token to the current branch.","Start new branch and make it current.","Finish current branch and restore previous branch as …","","","","","Parse given tokens into the given sink as a rust file.","A parsing function for a block. Blocks can be from …","","","A helper macro to get the token","A helper macro to get the node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,2,2,1,1,1,1,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,7,0,8,8,8,8,0,9,9,9,9,9,9,9,9,0,0,10,10,0,0,0,6,6,6,6,6,6,6,6,6,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,10,10,10,10,10,10,10,6,6,3,11,7,6,6,4,4,11,11,7,7,6,6,1,3,4,11,7,4,6,7,6,11,3,3,3,3,6,6,6,6,6,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textsize",3]],["token",3]],[[["syntaxkind",4],["textsize",3]],["token",3]],null,[[],["token",3]],[[["usize",15]],["token",3]],[[],[["option",4],["token",3]]],[[["str",15]],["bool",15]],null,null,[[]],[[["syntaxkind",4]]],[[]],[[]],[[["parseerror",4]]],[[["parseerror",4]]],[[]],[[["tokensource",8]]],null,[[["syntaxkind",4]],[["reparser",3],["option",4]]],[[["tokensource",8]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]],["syntaxkind",4]],[[],["syntaxkind",4]],[[],["luaop",4]],[[],["tokenset",3]],[[],["token",3]],[[["syntaxkind",4]],["ordering",4]],[[["syntaxkind",4]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["tokenset",3]],["bool",15]],[[["tokenset",3]],["bool",15]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["syntaxkind",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["syntaxkind",4],["option",4]]],[[["display",8]],["parseerror",4]],[[["syntaxkind",4]],["parseerror",4]]],"p":[[4,"Event"],[13,"Start"],[4,"LuaOp"],[4,"ParseError"],[13,"Expected"],[4,"SyntaxKind"],[3,"Token"],[8,"TokenSource"],[8,"TreeSink"],[3,"Reparser"],[3,"TokenSet"]]},\
"stdx":{"doc":"","t":[0,3,11,11,11,3,11,11,11,11,11,11,3,11,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["paths","AbsPathBuf","assert","as_path","pop","AbsPath","assert","parent","join","normalize","to_path_buf","strip_prefix","RelPathBuf","as_path","RelPath","new_unchecked","partition_point","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","as_ref","as_ref","as_ref","as_ref","as_ref","clone","clone","cmp","cmp","cmp","cmp","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","deref","deref","fmt","fmt","fmt","fmt","hash","hash","hash","hash","borrow","try_from","try_from","try_from","try_from"],"q":["stdx","stdx::paths","","","","","","","","","","","","","","","stdx","stdx::paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Thin wrappers around <code>std::path</code>, distinguishing between …","Wrapper around an absolute [<code>PathBuf</code>].","Wrap the given absolute path in <code>AbsPathBuf</code>","Coerces to a <code>AbsPath</code> slice.","Equivalent of [<code>PathBuf::pop</code>] for <code>AbsPathBuf</code>.","Wrapper around an absolute [<code>Path</code>].","Wrap the given absolute path in <code>AbsPath</code>","Equivalent of [<code>Path::parent</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::join</code>] for <code>AbsPath</code>.","Normalize the given path:","Equivalent of [<code>Path::to_path_buf</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::strip_prefix</code>] for <code>AbsPath</code>.","Wrapper around a relative [<code>PathBuf</code>].","Coerces to a <code>RelPath</code> slice.","Wrapper around a relative [<code>Path</code>].","Creates a new <code>RelPath</code> from <code>path</code>, without checking if it …","Returns <code>idx</code> such that:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,2,2,2,2,2,2,0,3,0,4,0,1,1,1,1,1,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,1,1,2,3,4,1,3,1,2,3,4,1,1,1,2,2,3,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,1,3,3],"f":[null,null,[[],["abspathbuf",3]],[[],["abspath",3]],[[],["bool",15]],null,[[["path",3]],["abspath",3]],[[],[["abspath",3],["option",4]]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[["abspath",3]],[["relpath",3],["option",4]]],null,[[],["relpath",3]],null,[[["path",3]],["relpath",3]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[],["path",3]],[[],["abspath",3]],[[],["path",3]],[[],["path",3]],[[],["path",3]],[[],["abspathbuf",3]],[[],["relpathbuf",3]],[[["abspathbuf",3]],["ordering",4]],[[["abspath",3]],["ordering",4]],[[["relpathbuf",3]],["ordering",4]],[[["relpath",3]],["ordering",4]],[[["abspathbuf",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[["abspathbuf",3]],[["ordering",4],["option",4]]],[[["abspath",3]],[["ordering",4],["option",4]]],[[["relpathbuf",3]],[["ordering",4],["option",4]]],[[["relpath",3]],[["ordering",4],["option",4]]],[[],["abspath",3]],[[],["path",3]],[[],["relpath",3]],[[],["path",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["abspath",3]],[[["pathbuf",3]],[["abspathbuf",3],["result",4],["pathbuf",3]]],[[["str",15]],[["abspathbuf",3],["result",4],["pathbuf",3]]],[[["pathbuf",3]],[["relpathbuf",3],["pathbuf",3],["result",4]]],[[["str",15]],[["relpathbuf",3],["pathbuf",3],["result",4]]]],"p":[[3,"AbsPathBuf"],[3,"AbsPath"],[3,"RelPathBuf"],[3,"RelPath"]]},\
"syntax":{"doc":"","tn":["ast","Name","NameRef","MultiName","SourceFile","Block","AssignStmt","LocalAssignStmt","LocalFunctionDefStmt","FunctionDefStmt","ForStmt","IfStmt","ReturnStmt","WhileStmt","ExprStmt","BreakStmt","RepeatUntilStmt","LabelStmt","GotoStmt","LabelDelim","DoStmt","ParamList","FunctionMethod","FunctionStatic","IndexPath","MultivalExpr","ElseBranch","ElseIfBranch","NumericFor","GenericFor","Literal","TableExpr","InfixExpr","PrefixExpr","IndexExpr","DotExpr","FunctionExpr","CallExpr","MethodCallExpr","CallArgs","ArgList","TableSep","ParenExpr","KeyValue","PositionalValue","Index","IdentKey","Stmt","Block","AssignStmt","LocalAssignStmt","LocalFunctionDefStmt","FunctionDefStmt","ForStmt","IfStmt","ReturnStmt","WhileStmt","ExprStmt","BreakStmt","RepeatUntilStmt","LabelStmt","GotoStmt","StmtItem","LocalAssignStmt","LocalFunctionDefStmt","FunctionDefStmt","FunctionDefContent","FunctionMethod","FunctionStatic","Name","Expr","Literal","TableExpr","InfixExpr","PrefixExpr","IndexExpr","DotExpr","FunctionExpr","CallExpr","MethodCallExpr","NameRef","ForContent","NumericFor","GenericFor","TableContent","KeyValue","PositionalValue","TableKey","Index","Name","Error","Ident","Shebang","Number","Str","True","False","Comment","Whitespace","LiteralKind","Str","Number","Bool","Nil","Vararg","AstNode","can_cast","cast","syntax","range","AstToken","can_cast","cast","syntax","text","range","AstChildren","tokenize","tokenizer","SyntaxKind","Unknown","Bang","Hash","Modulo","LParen","RParen","Asterisk","Plus","Comma","Minus","Dot","DoubleDot","TripleDot","Slash","Colon","DoubleColon","Semicolon","Lt","LtEq","Eq","EqEq","Gt","GtEq","LBracket","RBracket","Caret","LBrace","RBrace","NotEq","FunctionKw","LocalKw","TrueKw","FalseKw","IfKw","ThenKw","ElseKw","ElseifKw","WhileKw","ForKw","InKw","BreakKw","DoKw","GotoKw","AndKw","OrKw","NotKw","ReturnKw","EndKw","RepeatKw","UntilKw","NilKw","Number","Str","True","False","Error","Ident","Shebang","Name","NameRef","MultiName","SourceFile","Block","AssignStmt","LocalAssignStmt","LocalFunctionDefStmt","FunctionDefStmt","ForStmt","IfStmt","ReturnStmt","WhileStmt","ExprStmt","BreakStmt","RepeatUntilStmt","LabelStmt","GotoStmt","LabelDelim","DoStmt","ParamList","FunctionMethod","FunctionStatic","IndexPath","MultivalExpr","ElseBranch","ElseIfBranch","NumericFor","GenericFor","Literal","TableExpr","InfixExpr","PrefixExpr","IndexExpr","DotExpr","FunctionExpr","CallExpr","MethodCallExpr","CallArgs","ArgList","TableSep","ParenExpr","KeyValue","PositionalValue","Index","IdentKey","Stmt","StmtItem","FunctionDefContent","Expr","ForContent","TableContent","TableKey","Comment","Whitespace","Token","kind","len","N","T","AstPtr","SyntaxNodePtr","TextRange","TextSize","WalkEvent","Enter","Leave","SyntaxElement","SyntaxElementChildren","SyntaxError","SyntaxNode","SyntaxNodeChildren","SyntaxToken","TokenText","Parse","syntax_node","to_syntax","tree","errors","ok","cast","is_call","SourceFile","parse","reparse","debug_dump","match_ast","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","hash","hash","from","eq","eq","ne","cmp","clone","clone","nth","partial_cmp","fmt","fmt","clone","fmt","add","add","add","add","sub","sub","sub","sub","hash","hash","from","add_assign","add_assign","eq","ne","eq","ne","cmp","start_bound","end_bound","default","default","sum","clone","clone","try_from","sub_assign","sub_assign","partial_cmp","fmt","fmt","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","as_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","eq","ne","partial_cmp","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","op_details","op_kind","op_token","lhs","rhs","sub_exprs","token","kind","ident_token","ident_token","names","body","stmts","eq_token","local_token","multi_name","eq_token","multival_expr","local_token","function_token","name","param_list","body","end_token","function_token","function_def_content","param_list","body","end_token","for_token","content","do_token","block","end_token","if_token","cond","then_token","block","else_branch","else_if_branch","end_token","return_token","expr","while_token","cond","do_token","body","end_token","multival_expr","break_token","repeat_token","block","until_token","expr","start","name","finish","goto_token","name_ref","double_colon_token","do_token","body","end_token","l_paren_token","multi_name","triple_dot_token","r_paren_token","index_path","colon_token","name","index_path","dot_token","name","name_refs","exprs","else_token","block","elseif_token","cond","then_token","block","else_if_branch","else_branch","name","eq_token","expr","multi_name","in_token","expr","number_token","str_token","true_token","false_token","l_curly_token","table_contents","r_curly_token","expr","base","index","expr","dot_token","ident_token","function_token","params","body","end_token","fun","call_args","fun","colon_token","name_ref","call_args","arg_list","table_expr","str_token","l_paren_token","args","triple_dot_token","r_paren_token","semicolon_token","l_paren_token","expr","r_paren_token","key","value","expr","l_brack_token","expr","r_brack_token","ident_token","text","text","is_block_like","lhs","rhs","sub_multival_exprs","stmt_items","new","to_node","cast","new","to_node","syntax_node_ptr","cast","new","new_at_offset","range","with_range","as_str","is_trivia","is_keyword","is_punct","is_literal","from_keyword","with_range","new","new","at","empty","up_to","start","end","len","is_empty","contains","contains_inclusive","contains_range","intersect","cover","cover_offset","checked_add","checked_sub","ordering","of","checked_add","checked_sub","map"],"q":["syntax","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast","syntax","syntax::ast","syntax","","","syntax::astsyntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::astsyntax","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","","","","","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The main trait to go from untyped <code>SyntaxNode</code>  to a typed …","","","","","Like <code>AstNode</code>, but wraps tokens rather than interior nodes.","","","","","","An iterator over <code>SyntaxNode</code> children of a particular AST …","Tokenize text into a vector of tokens and errors","Returns a tokenizer iterator that will turn the source …","The kind of syntax node, e.g. Ident, <code>UseKw</code>, or <code>Struct</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A lua token","The kind of token.","The length of the token.","A helper macro to get the node","A helper macro to get the token","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","<code>WalkEvent</code> describes tree walking process.","Fired before traversing the node.","Fired after the node is traversed.","","","","","","","","<code>Parse</code> is the result of the parsing: a syntax tree and a …","","","","","","","","","","","","Matches a <code>SyntaxNode</code> against an <code>ast</code> typereates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","Create a zero-length range at the specified offset (…","Create a range up to the given end (<code>..end</code>).","The start point of this range.","The end point of this range.","The size of this range.","Check if this range is empty.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","The range covered by both ranges, if it exists. If the …","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","Add an offset to this range.","Subtract an offset from this range.","Relative order of the two ranges (overlapping ranges are …","The text size of some primitive text-like object.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred.",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,0,3,3,3,0,4,4,4,4,4,4,4,4,4,4,0,5,5,0,6,6,0,7,7,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,9,9,9,9,0,10,10,10,10,10,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,14,14,14,14,14,14,4,0,15,14,14,0,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,11,12,11,11,12,12,11,12,11,11,11,12,11,13,13,75,76,76,75,76,75,76,75,75,76,76,75,76,76,76,75,75,76,75,75,76,75,76,76,75,76,75,76,76,76,75,16,16,16,17,17,17,18,18,18,15,15,15,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,48,48,48,49,49,49,50,50,50,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,69,69,69,74,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,6,6,7,7,70,8,16,17,18,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,61,62,63,64,65,66,67,68,69,70,71,72,73,14,74,8,8,16,16,17,17,18,18,15,15,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,1,1,2,2,3,3,4,4,5,5,6,6,7,7,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,71,71,72,73,73,74,74,74,14,14,74,74,8,16,17,18,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,61,62,63,64,65,66,67,68,69,70,71,73,74,14,1,2,3,4,5,6,7,16,17,18,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,8,16,17,18,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,61,62,63,64,65,66,67,68,69,71,72,46,46,46,46,46,46,44,44,16,17,18,15,19,20,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,24,24,24,24,24,25,25,25,25,25,25,25,26,26,27,27,27,27,27,28,29,30,30,30,30,31,31,31,32,32,33,34,34,34,35,35,35,35,36,36,36,37,37,37,38,39,40,40,41,41,41,41,41,41,42,42,42,43,43,43,44,44,44,44,45,45,45,47,48,48,49,49,49,50,50,50,50,51,51,52,52,52,52,53,53,53,54,54,54,54,55,56,56,56,57,57,58,59,59,59,60,16,17,1,20,20,20,15,71,71,71,72,72,72,72,73,73,73,73,74,11,11,11,11,11,12,12,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[],["textrange",3]],null,[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[],["str",15]],[[],["textrange",3]],null,[[["str",15]]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["syntaxnode",6]],[[],[["syntaxnode",6],["parse",3]]],[[]],[[]],[[],[["arc",3],["result",4]]],[[],[["option",4],["parse",3]]],[[],["bool",15]],null,[[["str",15]],[["parse",3],["sourcefile",3]]],[[["indel",3]],[["parse",3],["sourcefile",3]]],[[],["string",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["u16",15]],["syntaxkind",4]],[[["syntaxkind",4]],["bool",15]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["syntaxkind",4]],["ordering",4]],[[],["token",3]],[[],["syntaxkind",4]],[[["u32",15]],["bool",15]],[[["syntaxkind",4]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["walkevent",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["ordering",4]],[[],[["bound",4],["textsize",3]]],[[],[["bound",4],["textsize",3]]],[[],["textsize",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[["usize",15]],[["tryfrominterror",3],["textsize",3],["result",4]]],[[]],[[]],[[["textsize",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[],["str",15]],[[["block",3]],["stmt",4]],[[["assignstmt",3]],["stmt",4]],[[["localassignstmt",3]],["stmt",4]],[[["localfunctiondefstmt",3]],["stmt",4]],[[["functiondefstmt",3]],["stmt",4]],[[["forstmt",3]],["stmt",4]],[[["ifstmt",3]],["stmt",4]],[[["returnstmt",3]],["stmt",4]],[[["whilestmt",3]],["stmt",4]],[[["exprstmt",3]],["stmt",4]],[[["breakstmt",3]],["stmt",4]],[[["repeatuntilstmt",3]],["stmt",4]],[[["labelstmt",3]],["stmt",4]],[[["gotostmt",3]],["stmt",4]],[[["localassignstmt",3]],["stmtitem",4]],[[["localfunctiondefstmt",3]],["stmtitem",4]],[[["functiondefstmt",3]],["stmtitem",4]],[[["functionmethod",3]],["functiondefcontent",4]],[[["functionstatic",3]],["functiondefcontent",4]],[[["name",3]],["functiondefcontent",4]],[[["literal",3]],["expr",4]],[[["tableexpr",3]],["expr",4]],[[["infixexpr",3]],["expr",4]],[[["prefixexpr",3]],["expr",4]],[[["indexexpr",3]],["expr",4]],[[["dotexpr",3]],["expr",4]],[[["functionexpr",3]],["expr",4]],[[["callexpr",3]],["expr",4]],[[["methodcallexpr",3]],["expr",4]],[[["nameref",3]],["expr",4]],[[["numericfor",3]],["forcontent",4]],[[["genericfor",3]],["forcontent",4]],[[["keyvalue",3]],["tablecontent",4]],[[["positionalvalue",3]],["tablecontent",4]],[[["index",3]],["tablekey",4]],[[["name",3]],["tablekey",4]],[[],["option",4]],[[],["literalkind",4]],[[],["name",3]],[[],["nameref",3]],[[],["multiname",3]],[[],["sourcefile",3]],[[],["block",3]],[[],["assignstmt",3]],[[],["localassignstmt",3]],[[],["localfunctiondefstmt",3]],[[],["functiondefstmt",3]],[[],["forstmt",3]],[[],["ifstmt",3]],[[],["returnstmt",3]],[[],["whilestmt",3]],[[],["exprstmt",3]],[[],["breakstmt",3]],[[],["repeatuntilstmt",3]],[[],["labelstmt",3]],[[],["gotostmt",3]],[[],["labeldelim",3]],[[],["dostmt",3]],[[],["paramlist",3]],[[],["functionmethod",3]],[[],["functionstatic",3]],[[],["indexpath",3]],[[],["multivalexpr",3]],[[],["elsebranch",3]],[[],["elseifbranch",3]],[[],["numericfor",3]],[[],["genericfor",3]],[[],["literal",3]],[[],["tableexpr",3]],[[],["infixexpr",3]],[[],["prefixexpr",3]],[[],["indexexpr",3]],[[],["dotexpr",3]],[[],["functionexpr",3]],[[],["callexpr",3]],[[],["methodcallexpr",3]],[[],["callargs",3]],[[],["arglist",3]],[[],["tablesep",3]],[[],["parenexpr",3]],[[],["keyvalue",3]],[[],["positionalvalue",3]],[[],["index",3]],[[],["identkey",3]],[[],["stmt",4]],[[],["stmtitem",4]],[[],["functiondefcontent",4]],[[],["expr",4]],[[],["forcontent",4]],[[],["tablecontent",4]],[[],["tablekey",4]],[[],["error",3]],[[],["ident",3]],[[],["shebang",3]],[[],["number",3]],[[],["str",3]],[[],["true",3]],[[],["false",3]],[[],["comment",3]],[[],["whitespace",3]],[[],["astchildren",3]],[[],["syntaxnodeptr",3]],[[],["astptr",3]],[[],["syntaxerror",3]],[[],["parse",3]],[[],["ordering",4]],[[["literalkind",4]],["bool",15]],[[["literalkind",4]],["bool",15]],[[["name",3]],["bool",15]],[[["name",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["multiname",3]],["bool",15]],[[["multiname",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["block",3]],["bool",15]],[[["block",3]],["bool",15]],[[["assignstmt",3]],["bool",15]],[[["assignstmt",3]],["bool",15]],[[["localassignstmt",3]],["bool",15]],[[["localassignstmt",3]],["bool",15]],[[["localfunctiondefstmt",3]],["bool",15]],[[["localfunctiondefstmt",3]],["bool",15]],[[["functiondefstmt",3]],["bool",15]],[[["functiondefstmt",3]],["bool",15]],[[["forstmt",3]],["bool",15]],[[["forstmt",3]],["bool",15]],[[["ifstmt",3]],["bool",15]],[[["ifstmt",3]],["bool",15]],[[["returnstmt",3]],["bool",15]],[[["returnstmt",3]],["bool",15]],[[["whilestmt",3]],["bool",15]],[[["whilestmt",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["breakstmt",3]],["bool",15]],[[["breakstmt",3]],["bool",15]],[[["repeatuntilstmt",3]],["bool",15]],[[["repeatuntilstmt",3]],["bool",15]],[[["labelstmt",3]],["bool",15]],[[["labelstmt",3]],["bool",15]],[[["gotostmt",3]],["bool",15]],[[["gotostmt",3]],["bool",15]],[[["labeldelim",3]],["bool",15]],[[["labeldelim",3]],["bool",15]],[[["dostmt",3]],["bool",15]],[[["dostmt",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["functionmethod",3]],["bool",15]],[[["functionmethod",3]],["bool",15]],[[["functionstatic",3]],["bool",15]],[[["functionstatic",3]],["bool",15]],[[["indexpath",3]],["bool",15]],[[["indexpath",3]],["bool",15]],[[["multivalexpr",3]],["bool",15]],[[["multivalexpr",3]],["bool",15]],[[["elsebranch",3]],["bool",15]],[[["elsebranch",3]],["bool",15]],[[["elseifbranch",3]],["bool",15]],[[["elseifbranch",3]],["bool",15]],[[["numericfor",3]],["bool",15]],[[["numericfor",3]],["bool",15]],[[["genericfor",3]],["bool",15]],[[["genericfor",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["tableexpr",3]],["bool",15]],[[["tableexpr",3]],["bool",15]],[[["infixexpr",3]],["bool",15]],[[["infixexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["dotexpr",3]],["bool",15]],[[["dotexpr",3]],["bool",15]],[[["functionexpr",3]],["bool",15]],[[["functionexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["callargs",3]],["bool",15]],[[["callargs",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["tablesep",3]],["bool",15]],[[["tablesep",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["keyvalue",3]],["bool",15]],[[["keyvalue",3]],["bool",15]],[[["positionalvalue",3]],["bool",15]],[[["positionalvalue",3]],["bool",15]],[[["index",3]],["bool",15]],[[["index",3]],["bool",15]],[[["identkey",3]],["bool",15]],[[["identkey",3]],["bool",15]],[[["stmt",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["stmtitem",4]],["bool",15]],[[["stmtitem",4]],["bool",15]],[[["functiondefcontent",4]],["bool",15]],[[["functiondefcontent",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["forcontent",4]],["bool",15]],[[["forcontent",4]],["bool",15]],[[["tablecontent",4]],["bool",15]],[[["tablecontent",4]],["bool",15]],[[["tablekey",4]],["bool",15]],[[["tablekey",4]],["bool",15]],[[["error",3]],["bool",15]],[[["error",3]],["bool",15]],[[["ident",3]],["bool",15]],[[["ident",3]],["bool",15]],[[["shebang",3]],["bool",15]],[[["shebang",3]],["bool",15]],[[["number",3]],["bool",15]],[[["number",3]],["bool",15]],[[["str",3]],["bool",15]],[[["str",3]],["bool",15]],[[["true",3]],["bool",15]],[[["true",3]],["bool",15]],[[["false",3]],["bool",15]],[[["false",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["astptr",3]],["bool",15]],[[["syntaxerror",3]],["bool",15]],[[["syntaxerror",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["tokentext",3]],["bool",15]],[[["parse",3]],["bool",15]],[[["parse",3]],["bool",15]],[[],[["option",4],["ordering",4]]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],[["option",4],["luaop",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[]],[[],["syntaxtoken",6]],[[],["literalkind",4]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["name",3]]],[[],[["block",3],["option",4]]],[[],[["stmt",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multiname",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multivalexpr",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["name",3],["option",4]]],[[],[["paramlist",3],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["functiondefcontent",4]]],[[],[["paramlist",3],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["forcontent",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["elsebranch",3],["option",4]]],[[],[["option",4],["elseifbranch",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multivalexpr",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["labeldelim",3]]],[[],[["name",3],["option",4]]],[[],[["option",4],["labeldelim",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multiname",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["indexpath",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["name",3],["option",4]]],[[],[["indexpath",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["name",3],["option",4]]],[[],[["astchildren",3],["nameref",3]]],[[],[["astchildren",3],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["block",3],["option",4]]],[[],[["option",4],["elseifbranch",3]]],[[],[["elsebranch",3],["option",4]]],[[],[["name",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multivalexpr",3],["option",4]]],[[],[["multiname",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["multivalexpr",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["tablecontent",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["index",3]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["paramlist",3],["option",4]]],[[],[["block",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["callargs",3]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["callargs",3]]],[[],[["arglist",3],["option",4]]],[[],[["option",4],["tableexpr",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["tablekey",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["tokentext",3]],[[],["tokentext",3]],[[],["bool",15]],[[],[["multivalexpr",3],["option",4]]],[[],[["multivalexpr",3],["option",4]]],[[]],[[],[["stmtitem",4],["astchildren",3]]],[[["syntaxnode",6]],["syntaxnodeptr",3]],[[["syntaxnode",6]],["syntaxnode",6]],[[],[["option",4],["astptr",3]]],[[],["astptr",3]],[[["syntaxnode",6]]],[[],["syntaxnodeptr",3]],[[],[["astptr",3],["option",4]]],[[["textrange",3],["string",3]],["syntaxerror",3]],[[["textsize",3]],["syntaxerror",3]],[[],["textrange",3]],[[["textrange",3]]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["syntaxkind",4],["option",4]]],[[["textsize",3]],["token",3]],[[["textsize",3],["syntaxkind",4]],["token",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],[["option",4],["textrange",3]]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textrange",3]],["ordering",4]],[[],["textsize",3]],[[["textsize",3]],[["textsize",3],["option",4]]],[[["textsize",3]],[["textsize",3],["option",4]]],[[],["walkevent",4]]],"p":[[4,"Stmt"],[4,"StmtItem"],[4,"FunctionDefContent"],[4,"Expr"],[4,"ForContent"],[4,"TableContent"],[4,"TableKey"],[4,"LiteralKind"],[8,"AstNode"],[8,"AstToken"],[4,"SyntaxKind"],[3,"Token"],[4,"WalkEvent"],[3,"Parse"],[3,"SourceFile"],[3,"Name"],[3,"NameRef"],[3,"MultiName"],[3,"Block"],[3,"AssignStmt"],[3,"LocalAssignStmt"],[3,"LocalFunctionDefStmt"],[3,"FunctionDefStmt"],[3,"ForStmt"],[3,"IfStmt"],[3,"ReturnStmt"],[3,"WhileStmt"],[3,"ExprStmt"],[3,"BreakStmt"],[3,"RepeatUntilStmt"],[3,"LabelStmt"],[3,"GotoStmt"],[3,"LabelDelim"],[3,"DoStmt"],[3,"ParamList"],[3,"FunctionMethod"],[3,"FunctionStatic"],[3,"IndexPath"],[3,"MultivalExpr"],[3,"ElseBranch"],[3,"ElseIfBranch"],[3,"NumericFor"],[3,"GenericFor"],[3,"Literal"],[3,"TableExpr"],[3,"InfixExpr"],[3,"PrefixExpr"],[3,"IndexExpr"],[3,"DotExpr"],[3,"FunctionExpr"],[3,"CallExpr"],[3,"MethodCallExpr"],[3,"CallArgs"],[3,"ArgList"],[3,"TableSep"],[3,"ParenExpr"],[3,"KeyValue"],[3,"PositionalValue"],[3,"Index"],[3,"IdentKey"],[3,"Error"],[3,"Ident"],[3,"Shebang"],[3,"Number"],[3,"Str"],[3,"True"],[3,"False"],[3,"Comment"],[3,"Whitespace"],[3,"AstChildren"],[3,"SyntaxNodePtr"],[3,"AstPtr"],[3,"SyntaxError"],[3,"TokenText"],[3,"TextRange"],[3,"TextSize"]]},\
"test_utils":{"doc":"","t":[5,17,5,5,5,14],"n":["__diff","CURSOR_MARKER","extract_offset","extract_range","format_diff","assert_eq_text"],"q":["test_utils","","","","",""],"d":["","","Infallible version of <code>try_extract_offset()</code>.","Infallible version of <code>try_extract_range()</code>.","","Asserts that two strings are equal, otherwise displays a …"],"i":[0,0,0,0,0,0],"f":[[[["str",15]],[["global",3],["vec",3],["chunk",4]]],null,[[["str",15]]],[[["str",15]]],[[["chunk",4],["vec",3]],["string",3]],null],"p":[]},\
"text_edit":{"doc":"Representation of a <code>TextEdit</code>.","t":[3,3,3,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TextRange","TextSize","Indel","insert","delete","TextEdit","TextEditBuilder","insert","delete","replace","apply","offset","builder","insert","delete","replace","len","is_empty","iter","apply","union","apply_to_offset","replace","delete","insert","finish","invalidates_offset","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","add","add","add","add","sub","sub","sub","sub","hash","hash","from","add_assign","add_assign","eq","ne","eq","ne","cmp","start_bound","end_bound","default","default","sum","clone","clone","try_from","sub_assign","sub_assign","partial_cmp","fmt","fmt","into_iter","clone","clone","clone","default","default","fmt","fmt","fmt","new","at","empty","up_to","start","end","len","is_empty","contains","contains_inclusive","contains_range","intersect","cover","cover_offset","checked_add","checked_sub","ordering","of","checked_add","checked_sub"],"q":["text_edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","<code>InsertDelete</code> – a single “atomic” change to text","","Refers to offsets in the original text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","Create a zero-length range at the specified offset (…","Create a range up to the given end (<code>..end</code>).","The start point of this range.","The end point of this range.","The size of this range.","Check if this range is empty.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","The range covered by both ranges, if it exists. If the …","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","Add an offset to this range.","Subtract an offset from this range.","Relative order of the two ranges (overlapping ranges are …","The text size of some primitive text-like object.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred."],"i":[0,0,0,1,1,0,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,5,5,4,5,4,5,4,4,5,5,4,5,5,5,4,4,5,4,4,5,4,5,5,4,5,4,5,5,5,4,2,1,2,3,2,3,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5],"f":[null,null,null,null,null,null,null,[[["textsize",3],["string",3]],["indel",3]],[[["textrange",3]],["indel",3]],[[["textrange",3],["string",3]],["indel",3]],[[["string",3]]],[[],["textsize",3]],[[],["texteditbuilder",3]],[[["textsize",3],["string",3]],["textedit",3]],[[["textrange",3]],["textedit",3]],[[["textrange",3],["string",3]],["textedit",3]],[[],["usize",15]],[[],["bool",15]],[[],[["iter",3],["indel",3]]],[[["string",3]]],[[["textedit",3]],[["result",4],["textedit",3]]],[[["textsize",3]],[["textsize",3],["option",4]]],[[["textrange",3],["string",3]]],[[["textrange",3]]],[[["textsize",3],["string",3]]],[[],["textedit",3]],[[["textsize",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["ordering",4]],[[],[["textsize",3],["bound",4]]],[[],[["textsize",3],["bound",4]]],[[],["textsize",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[["usize",15]],[["textsize",3],["tryfrominterror",3],["result",4]]],[[]],[[]],[[["textsize",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["indel",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["ordering",4]],[[],["textsize",3]],[[["textsize",3]],[["textsize",3],["option",4]]],[[["textsize",3]],[["textsize",3],["option",4]]]],"p":[[3,"Indel"],[3,"TextEdit"],[3,"TextEditBuilder"],[3,"TextRange"],[3,"TextSize"]]},\
"vfs":{"doc":"","t":[0,3,12,11,3,12,12,4,13,12,12,12,13,12,6,8,10,10,10,10,0,3,4,13,13,3,12,3,3,12,12,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["handle","Entry","root","new","Config","version","load","Message","Progress","n_total","n_done","config_version","Loaded","files","Sender","Handle","spawn","set_config","invalidate","load_sync","loader","FileLoaderHandle","Message","Config","Invalidate","FileId","0","Vfs","ChangedFile","file_id","change_kind","exists","is_created_or_deleted","ChangeKind","Create","Modify","Delete","len","file_id","file_path","file_contents","iter","set_file_contents","has_changes","take_changes","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","spawn","set_config","invalidate","load_sync","clone","clone","default","cmp","eq","ne","eq","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash"],"q":["vfs","vfs::handle","","","","","","","","vfs::handle::Message","","","vfs::handle","vfs::handle::Message","vfs::handle","","","","","","vfs","vfs::loader","","","","vfs","","","","","","","","","","","","","","","","","","","","vfs::handle","","","","","","","","","","","","","","","","","","","","","vfs::loader","","","","","","","","","","","","","","vfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader","","","","vfs","","","","","","","","vfs::handle","","","vfs::loader","","vfs","","","",""],"d":["","","","","","Version number to associate progress updates to the right …","","Message about an action taken by a [<code>Handle</code>].","Indicate a gradual progress.","","","","The handle loaded the following files’ content.","","Type that will receive <code>Messages</code> from a [<code>Handle</code>].","","","","","","","","","","","","","","Changed file in the [<code>Vfs</code>].","Id of the changed file","Kind of change","Returns <code>true</code> if the change is not <code>Delete</code>.","Returns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.","Kind of file change.","The file was (re-)created","The file was modified","The file was deleted","Amount of files currently stored.","Id of the given path if it exists in the <code>Vfs</code> and is not …","File path corresponding to the given <code>file_id</code>.","File content corresponding to the given <code>file_id</code>.","Returns an iterator over the stored ids and their …","Update the <code>path</code> with the given <code>contents</code>. <code>None</code> means the …","Returns <code>true</code> if the <code>Vfs</code> contains changes.","Drain and returns all the changes in the <code>Vfs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,2,2,0,3,4,4,4,3,5,0,0,6,6,6,6,0,0,0,7,7,0,8,0,0,9,9,9,9,0,10,10,10,11,11,11,11,11,11,11,11,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,12,12,12,12,12,12,12,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,11,11,11,11,11,11,11,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,12,12,12,12,8,10,11,8,8,8,10,8,1,2,3,12,7,8,9,10,11,8],"f":[null,null,null,[[["abspathbuf",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["sender",6]]],[[["config",3]]],[[["abspathbuf",3]]],[[["abspath",3]],[["vec",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[],["usize",15]],[[["abspath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],["path",3]],[[["fileid",3]]],[[]],[[["vec",3],["option",4],["abspathbuf",3]],["bool",15]],[[],["bool",15]],[[],[["vec",3],["changedfile",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["sender",6]]],[[["config",3]]],[[["abspathbuf",3]]],[[["abspath",3]],[["vec",3],["option",4]]],[[],["fileid",3]],[[],["changekind",4]],[[],["vfs",3]],[[["fileid",3]],["ordering",4]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["changekind",4]],["bool",15]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[3,"Entry"],[3,"Config"],[4,"Message"],[13,"Progress"],[13,"Loaded"],[8,"Handle"],[4,"Message"],[3,"FileId"],[3,"ChangedFile"],[4,"ChangeKind"],[3,"Vfs"],[3,"FileLoaderHandle"]]},\
"xtask":{"doc":"","t":[0,0,0,3,12,12,12,11,11,3,12,12,12,4,13,13,12,12,12,5,5,11,11,11,11,11,4,13,13,13,3,12,12,12,5,5,5,5,5,0,3,12,12,12,12,12,3,12,11,11,11,5,5,5,5,0,0,3,12,4,13,13,13,3,12,3,12,12,3,18,11,11,0,11,0,5,5,17,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18],"n":["codegen","gen_syntax","ast_src","AstSrc","tokens","nodes","enums","lower","names","AstNodeSrc","doc","name","fields","Field","Token","Node","name","ty","cardinality","label_is_manually_implemented","node_is_manually_implemented","is_many","is_many_trailing","token_kind","method_name","ty","Cardinality","Optional","ManyTrailing","Many","AstEnumSrc","doc","name","variants","lower","lower_enum","lower_rule","lower_comma_list","pluralize","kinds_src","KindsSrc","punct","keywords","literals","tokens","trivia","PunctMap","0","get","iter","get","run","gen_syntax_kinds","gen_tokens","gen_nodes","dist","flags","Xtask","subcommand","XtaskCmd","Help","FuzzTests","Codegen","Help","help","FuzzTests","lexer","reset","Codegen","HELP","from_env","from_vec","fuzz_tests","run","utils","xtask_root","project_root","PREAMBLE","reformat","update","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","default","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","serialize","serialize","deserialize","deserialize","run","from_env_","from_vec_","parse_","parse_","parse_","parse_","HELP_"],"q":["xtask","xtask::codegen","xtask::codegen::gen_syntax","xtask::codegen::gen_syntax::ast_src","","","","","","","","","","","","","xtask::codegen::gen_syntax::ast_src::Field","","","xtask::codegen::gen_syntax::ast_src","","","","","","","","","","","","","","","","","","","","xtask::codegen::gen_syntax","xtask::codegen::gen_syntax::kinds_src","","","","","","","","","","","xtask::codegen::gen_syntax","","","","xtask","","xtask::flags","","","","","","","","","","","","","","","xtask","xtask::flags","xtask","xtask::utils","","","","","xtask","xtask::codegen::gen_syntax::ast_src","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::codegen::gen_syntax::kinds_src","","","","","","","","","","","","","","xtask::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::codegen::gen_syntax::ast_src","","","","","","","","","xtask::codegen::gen_syntax::kinds_src","","xtask::flags","","","","","xtask::codegen::gen_syntax::kinds_src","","","","xtask::flags","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper to update file on disk if it has changed. With …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,0,2,2,2,0,3,3,4,4,4,0,0,3,3,3,3,3,0,5,5,5,0,6,6,6,0,0,0,0,0,0,0,7,7,7,7,7,0,8,8,8,7,0,0,0,0,0,0,0,9,0,10,10,10,0,11,0,12,12,0,9,9,9,0,12,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,1,3,3,5,1,2,3,5,6,7,8,9,10,11,12,13,7,8,7,8,13,9,9,9,11,12,13,9],"f":[null,null,null,null,null,null,null,[[["grammar",3]],["astsrc",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["tokenstream",3]]],[[["punctmap",3]],["ident",3]],[[],["ident",3]],null,null,null,null,null,null,null,null,[[["grammar",3]],["astsrc",3]],[[["grammar",3],["rule",4]],[["option",4],["vec",3]]],[[["grammar",3],["option",4],["string",3],["vec",3],["rule",4]]],[[["grammar",3],["option",4],["string",3],["vec",3],["rule",4]],["bool",15]],[[["str",15]],["string",3]],null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4],["str",15]]],[[],[["iter",3],["string",3]]],[[],[["kindssrc",3],["result",6]]],[[],["result",6]],[[["kindssrc",3],["astsrc",3]],[["result",6],["string",3]]],[[["kindssrc",3]],[["result",6],["string",3]]],[[["kindssrc",3],["astsrc",3]],[["result",6],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[["vec",3],["osstring",3]],["result",6]],null,[[],["result",6]],null,[[],["pathbuf",3]],[[],["pathbuf",3]],null,[[["str",15]],[["result",6],["string",3]]],[[["path",3],["str",15]],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["astsrc",3]],[[["field",4]],["bool",15]],[[["field",4]],["bool",15]],[[["cardinality",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",6]],[[["vec",3],["osstring",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],null],"p":[[3,"AstSrc"],[3,"AstNodeSrc"],[4,"Field"],[13,"Node"],[4,"Cardinality"],[3,"AstEnumSrc"],[3,"KindsSrc"],[3,"PunctMap"],[3,"Xtask"],[4,"XtaskCmd"],[3,"Help"],[3,"FuzzTests"],[3,"Codegen"]]}\
}');
initSearch(searchIndex);