name: release
on:
  schedule:
  - cron: '0 0 * * *' # midnight UTC

  push:
    branches:
    - release

jobs:
  build-release:
    name: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu

        - os: macos-latest
          target: x86_64-apple-darwin

        - os: windows-latest
          target: x86_64-pc-windows-msvc

    steps:
    - name: Install packages (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install coreutils

    - if: matrix.os == 'macos-latest'
      run: echo "DATE_CMD=gdate" >> $GITHUB_ENV
      shell: bash

    - if: matrix.os != 'macos-latest'
      run: echo "DATE_CMD=date" >> $GITHUB_ENV
      shell: bash

    - run: echo "TAG=$(${{ env.DATE_CMD }} --iso -u)" >> $GITHUB_ENV
      shell: bash
      if: github.ref == 'refs/heads/release'

    - run: echo "TAG=nightly" >> $GITHUB_ENV
      shell: bash
      if: github.ref != 'refs/heads/release'

    - run: 'echo "TAG: $TAG"'

    - name: Checkout repository

      uses: actions/checkout@v2

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build
      run: |
        cargo build --manifest-path ./crates/lua-analyzer/Cargo.toml --bin lua-analyzer --target ${{ matrix.target }} --release

    - name: Package
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp "target/${{ matrix.target }}/release/lua-analyzer.exe" "lua-analyzer-${{ matrix.target }}.exe"
          echo "ASSET=lua-analyzer-${{ matrix.target }}.exe" >> $GITHUB_ENV
        else
          cp "target/${{ matrix.target }}/release/lua-analyzer" "lua-analyzer"
          tar czf lua-analyzer-${{ matrix.target }}.tar.gz lua-analyzer
          echo "ASSET=lua-analyzer-${{ matrix.target }}.tar.gz" >> $GITHUB_ENV
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: lua-analyzer
        path: ${{ env.ASSET }}

    - name: Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.ASSET }}
        tag: ${{ env.TAG }}
        overwrite: true

    release:
      name: release
      runs-on: ubuntu-latest
      needs: ['build-release']

      steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: lua-analyzer

      - name: List downloaded files
        run: ls -R
