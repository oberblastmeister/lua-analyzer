---
source: crates/syntax/src/tests.rs
expression: "dump_parse(Program::parse(&input))"

---
Program@0..1514
  AssignStmt@0..26
    LocalKw@0..5 "local"
    Whitespace@5..6 " "
    MultiName@6..9
      Name@6..9
        Ident@6..9 "ffi"
    Whitespace@9..10 " "
    Eq@10..11 "="
    Whitespace@11..12 " "
    MultivalExpr@12..26
      CallExpr@12..26
        NameRef@12..19
          Ident@12..19 "require"
        Arglist@19..26
          LParen@19..20 "("
          MultivalExpr@20..25
            Literal@20..25
              Str@20..25 "\"ffi\""
          RParen@25..26 ")"
  Whitespace@26..28 "\n\n"
  ExprStmt@28..60
    CallExpr@28..60
      NameRef@28..34
        Ident@28..34 "dofile"
      Arglist@34..60
        LParen@34..35 "("
        MultivalExpr@35..59
          Literal@35..59
            Str@35..59 "\"../common/ffi_util.inc\""
        RParen@59..60 ")"
  Whitespace@60..62 "\n\n"
  ExprStmt@62..335
    StringCallExpr@62..335
      DotExpr@62..70
        NameRef@62..65
          Ident@62..65 "ffi"
        Dot@65..66 "."
        Ident@66..70 "cdef"
      Literal@70..335
        Str@70..335 "[[\ntypedef enum enum_ ..."
  Whitespace@335..337 "\n\n"
  AssignStmt@337..372
    LocalKw@337..342 "local"
    Whitespace@342..343 " "
    MultiName@343..344
      Name@343..344
        Ident@343..344 "C"
    Whitespace@344..345 " "
    Eq@345..346 "="
    Whitespace@346..347 " "
    MultivalExpr@347..372
      CallExpr@347..372
        DotExpr@347..355
          NameRef@347..350
            Ident@347..350 "ffi"
          Dot@350..351 "."
          Ident@351..355 "load"
        Arglist@355..372
          LParen@355..356 "("
          MultivalExpr@356..371
            Literal@356..371
              Str@356..371 "\"../clib/ctest\""
          RParen@371..372 ")"
  Whitespace@372..374 "\n\n"
  DoStmt@374..1179
    DoKw@374..376 "do"
    Whitespace@376..380 "\n\n  "
    Body@380..1175
      AssignStmt@380..412
        LocalKw@380..385 "local"
        Whitespace@385..386 " "
        MultiName@386..387
          Name@386..387
            Ident@386..387 "t"
        Whitespace@387..388 " "
        Eq@388..389 "="
        Whitespace@389..390 " "
        MultivalExpr@390..412
          CallExpr@390..412
            DotExpr@390..397
              NameRef@390..393
                Ident@390..393 "ffi"
              Dot@393..394 "."
              Ident@394..397 "new"
            Arglist@397..412
              LParen@397..398 "("
              MultivalExpr@398..411
                Literal@398..411
                  Str@398..411 "\"enum_i[100]\""
              RParen@411..412 ")"
      Whitespace@412..415 "\n  "
      ForStmt@415..444
        ForKw@415..418 "for"
        Whitespace@418..419 " "
        ForContent@419..425
          GenericFor@419..425
            Name@419..420
              Ident@419..420 "i"
            Eq@420..421 "="
            MultivalExpr@421..425
              Literal@421..422
                Number@421..422 "0"
              Comma@422..423 ","
              Literal@423..425
                Number@423..425 "99"
        Whitespace@425..426 " "
        DoKw@426..428 "do"
        Whitespace@428..429 " "
        Body@429..440
          ExprStmt@429..433
            IndexExpr@429..433
              NameRef@429..430
                Ident@429..430 "t"
              LBracket@430..431 "["
              NameRef@431..432
                Ident@431..432 "i"
              RBracket@432..433 "]"
          Whitespace@433..434 " "
          Error@434..435
            Eq@434..435 "="
          Whitespace@435..436 " "
          Error@436..440
            Str@436..440 "\"II\""
        Whitespace@440..441 " "
        EndKw@441..444 "end"
      Whitespace@444..447 "\n  "
      ForStmt@447..485
        ForKw@447..450 "for"
        Whitespace@450..451 " "
        ForContent@451..457
          GenericFor@451..457
            Name@451..452
              Ident@451..452 "i"
            Eq@452..453 "="
            MultivalExpr@453..457
              Literal@453..454
                Number@453..454 "0"
              Comma@454..455 ","
              Literal@455..457
                Number@455..457 "99"
        Whitespace@457..458 " "
        DoKw@458..460 "do"
        Whitespace@460..461 " "
        Body@461..481
          ExprStmt@461..481
            CallExpr@461..481
              NameRef@461..467
                Ident@461..467 "assert"
              Arglist@467..481
                LParen@467..468 "("
                MultivalExpr@468..480
                  InfixExpr@468..480
                    IndexExpr@468..472
                      NameRef@468..469
                        Ident@468..469 "t"
                      LBracket@469..470 "["
                      NameRef@470..471
                        Ident@470..471 "i"
                      RBracket@471..472 "]"
                    Whitespace@472..473 " "
                    EqEq@473..475 "=="
                    Whitespace@475..476 " "
                    Literal@476..480
                      Str@476..480 "\"II\""
                RParen@480..481 ")"
        Whitespace@481..482 " "
        EndKw@482..485 "end"
      Whitespace@485..488 "\n  "
      ForStmt@488..526
        ForKw@488..491 "for"
        Whitespace@491..492 " "
        ForContent@492..498
          GenericFor@492..498
            Name@492..493
              Ident@492..493 "i"
            Eq@493..494 "="
            MultivalExpr@494..498
              Literal@494..495
                Number@494..495 "0"
              Comma@495..496 ","
              Literal@496..498
                Number@496..498 "99"
        Whitespace@498..499 " "
        DoKw@499..501 "do"
        Whitespace@501..502 " "
        Body@502..522
          ExprStmt@502..513
            CallExpr@502..513
              NameRef@502..508
                Ident@502..508 "assert"
              Arglist@508..513
                LParen@508..509 "("
                MultivalExpr@509..513
                  IndexExpr@509..513
                    NameRef@509..510
                      Ident@509..510 "t"
                    LBracket@510..511 "["
                    NameRef@511..512
                      Ident@511..512 "i"
                    RBracket@512..513 "]"
          Whitespace@513..514 " "
          Error@514..515
            Unknown@514..515 ">"
          Error@515..516
            Eq@515..516 "="
          Whitespace@516..517 " "
          Error@517..521
            Str@517..521 "\"II\""
          Error@521..522
            RParen@521..522 ")"
        Whitespace@522..523 " "
        EndKw@523..526 "end"
      Whitespace@526..529 "\n  "
      ForStmt@529..557
        ForKw@529..532 "for"
        Whitespace@532..533 " "
        ForContent@533..539
          GenericFor@533..539
            Name@533..534
              Ident@533..534 "i"
            Eq@534..535 "="
            MultivalExpr@535..539
              Literal@535..536
                Number@535..536 "0"
              Comma@536..537 ","
              Literal@537..539
                Number@537..539 "99"
        Whitespace@539..540 " "
        DoKw@540..542 "do"
        Whitespace@542..543 " "
        Body@543..553
          ExprStmt@543..547
            IndexExpr@543..547
              NameRef@543..544
                Ident@543..544 "t"
              LBracket@544..545 "["
              NameRef@545..546
                Ident@545..546 "i"
              RBracket@546..547 "]"
          Whitespace@547..548 " "
          Error@548..549
            Eq@548..549 "="
          Whitespace@549..550 " "
          Error@550..551
            Minus@550..551 "-"
          Error@551..553
            Number@551..553 "10"
        Whitespace@553..554 " "
        EndKw@554..557 "end"
      Whitespace@557..560 "\n  "
      ForStmt@560..597
        ForKw@560..563 "for"
        Whitespace@563..564 " "
        ForContent@564..570
          GenericFor@564..570
            Name@564..565
              Ident@564..565 "i"
            Eq@565..566 "="
            MultivalExpr@566..570
              Literal@566..567
                Number@566..567 "0"
              Comma@567..568 ","
              Literal@568..570
                Number@568..570 "99"
        Whitespace@570..571 " "
        DoKw@571..573 "do"
        Whitespace@573..574 " "
        Body@574..593
          ExprStmt@574..593
            CallExpr@574..593
              NameRef@574..580
                Ident@574..580 "assert"
              Arglist@580..593
                LParen@580..581 "("
                MultivalExpr@581..592
                  InfixExpr@581..592
                    IndexExpr@581..585
                      NameRef@581..582
                        Ident@581..582 "t"
                      LBracket@582..583 "["
                      NameRef@583..584
                        Ident@583..584 "i"
                      RBracket@584..585 "]"
                    Whitespace@585..586 " "
                    EqEq@586..588 "=="
                    Whitespace@588..589 " "
                    PrefixExpr@589..592
                      Minus@589..590 "-"
                      Literal@590..592
                        Number@590..592 "10"
                RParen@592..593 ")"
        Whitespace@593..594 " "
        EndKw@594..597 "end"
      Whitespace@597..600 "\n  "
      ForStmt@600..644
        ForKw@600..603 "for"
        Whitespace@603..604 " "
        ForContent@604..610
          GenericFor@604..610
            Name@604..605
              Ident@604..605 "i"
            Eq@605..606 "="
            MultivalExpr@606..610
              Literal@606..607
                Number@606..607 "0"
              Comma@607..608 ","
              Literal@608..610
                Number@608..610 "99"
        Whitespace@610..611 " "
        DoKw@611..613 "do"
        Whitespace@613..614 " "
        Body@614..640
          ExprStmt@614..625
            CallExpr@614..625
              NameRef@614..620
                Ident@614..620 "assert"
              Arglist@620..625
                LParen@620..621 "("
                MultivalExpr@621..625
                  IndexExpr@621..625
                    NameRef@621..622
                      Ident@621..622 "t"
                    LBracket@622..623 "["
                    NameRef@623..624
                      Ident@623..624 "i"
                    RBracket@624..625 "]"
          Whitespace@625..626 " "
          Error@626..627
            Unknown@626..627 "~"
          Error@627..628
            Eq@627..628 "="
          Whitespace@628..629 " "
          Error@629..639
            Number@629..639 "2147483648"
          Error@639..640
            RParen@639..640 ")"
        Whitespace@640..641 " "
        EndKw@641..644 "end"
      Whitespace@644..647 "\n  "
      ForStmt@647..687
        ForKw@647..650 "for"
        Whitespace@650..651 " "
        ForContent@651..657
          GenericFor@651..657
            Name@651..652
              Ident@651..652 "i"
            Eq@652..653 "="
            MultivalExpr@653..657
              Literal@653..654
                Number@653..654 "1"
              Comma@654..655 ","
              Literal@655..657
                Number@655..657 "99"
        Whitespace@657..658 " "
        DoKw@658..660 "do"
        Whitespace@660..661 " "
        Body@661..683
          ExprStmt@661..683
            CallExpr@661..683
              NameRef@661..667
                Ident@661..667 "assert"
              Arglist@667..683
                LParen@667..668 "("
                MultivalExpr@668..682
                  InfixExpr@668..682
                    IndexExpr@668..672
                      NameRef@668..669
                        Ident@668..669 "t"
                      LBracket@669..670 "["
                      NameRef@670..671
                        Ident@670..671 "i"
                      RBracket@671..672 "]"
                    Whitespace@672..673 " "
                    EqEq@673..675 "=="
                    Whitespace@675..676 " "
                    IndexExpr@676..682
                      NameRef@676..677
                        Ident@676..677 "t"
                      LBracket@677..678 "["
                      InfixExpr@678..681
                        NameRef@678..679
                          Ident@678..679 "i"
                        Minus@679..680 "-"
                        Literal@680..681
                          Number@680..681 "1"
                      RBracket@681..682 "]"
                RParen@682..683 ")"
        Whitespace@683..684 " "
        EndKw@684..687 "end"
      Whitespace@687..690 "\n  "
      ExprStmt@690..710
        CallExpr@690..710
          NameRef@690..696
            Ident@690..696 "assert"
          Arglist@696..710
            LParen@696..697 "("
            MultivalExpr@697..709
              InfixExpr@697..709
                InfixExpr@697..703
                  IndexExpr@697..701
                    NameRef@697..698
                      Ident@697..698 "t"
                    LBracket@698..699 "["
                    Literal@699..700
                      Number@699..700 "0"
                    RBracket@700..701 "]"
                  Plus@701..702 "+"
                  Literal@702..703
                    Number@702..703 "1"
                Whitespace@703..704 " "
                EqEq@704..706 "=="
                Whitespace@706..707 " "
                PrefixExpr@707..709
                  Minus@707..708 "-"
                  Literal@708..709
                    Number@708..709 "9"
            RParen@709..710 ")"
      Whitespace@710..713 "\n  "
      ExprStmt@713..724
        CallExpr@713..724
          NameRef@713..719
            Ident@713..719 "assert"
          Arglist@719..724
            LParen@719..720 "("
            MultivalExpr@720..724
              IndexExpr@720..724
                NameRef@720..721
                  Ident@720..721 "t"
                LBracket@721..722 "["
                Literal@722..723
                  Number@722..723 "0"
                RBracket@723..724 "]"
      Whitespace@724..725 " "
      Error@725..726
        Unknown@725..726 "~"
      Error@726..727
        Eq@726..727 "="
      Whitespace@727..728 " "
      Error@728..732
        Str@728..732 "\"BB\""
      Error@732..733
        RParen@732..733 ")"
      Whitespace@733..736 "\n  "
      ExprStmt@736..776
        CallExpr@736..776
          NameRef@736..741
            Ident@736..741 "fails"
          Arglist@741..776
            LParen@741..742 "("
            MultivalExpr@742..775
              FunctionExpr@742..775
                FunctionKw@742..750 "function"
                Paramlist@750..752
                  LParen@750..751 "("
                  RParen@751..752 ")"
                Whitespace@752..753 " "
                Body@753..771
                  ReturnStmt@753..764
                    ReturnKw@753..759 "return"
                    Whitespace@759..760 " "
                    MultivalExpr@760..764
                      IndexExpr@760..764
                        NameRef@760..761
                          Ident@760..761 "t"
                        LBracket@761..762 "["
                        Literal@762..763
                          Number@762..763 "0"
                        RBracket@763..764 "]"
                  Whitespace@764..765 " "
                  Error@765..766
                    Unknown@765..766 ">"
                  Whitespace@766..767 " "
                  Error@767..771
                    Str@767..771 "\"BB\""
                Whitespace@771..772 " "
                EndKw@772..775 "end"
            RParen@775..776 ")"
      Whitespace@776..780 "\n\n  "
      AssignStmt@780..812
        LocalKw@780..785 "local"
        Whitespace@785..786 " "
        MultiName@786..787
          Name@786..787
            Ident@786..787 "u"
        Whitespace@787..788 " "
        Eq@788..789 "="
        Whitespace@789..790 " "
        MultivalExpr@790..812
          CallExpr@790..812
            DotExpr@790..797
              NameRef@790..793
                Ident@790..793 "ffi"
              Dot@793..794 "."
              Ident@794..797 "new"
            Arglist@797..812
              LParen@797..798 "("
              MultivalExpr@798..811
                Literal@798..811
                  Str@798..811 "\"enum_u[100]\""
              RParen@811..812 ")"
      Whitespace@812..815 "\n  "
      ForStmt@815..844
        ForKw@815..818 "for"
        Whitespace@818..819 " "
        ForContent@819..825
          GenericFor@819..825
            Name@819..820
              Ident@819..820 "i"
            Eq@820..821 "="
            MultivalExpr@821..825
              Literal@821..822
                Number@821..822 "0"
              Comma@822..823 ","
              Literal@823..825
                Number@823..825 "99"
        Whitespace@825..826 " "
        DoKw@826..828 "do"
        Whitespace@828..829 " "
        Body@829..840
          ExprStmt@829..833
            IndexExpr@829..833
              NameRef@829..830
                Ident@829..830 "u"
              LBracket@830..831 "["
              NameRef@831..832
                Ident@831..832 "i"
              RBracket@832..833 "]"
          Whitespace@833..834 " "
          Error@834..835
            Eq@834..835 "="
          Whitespace@835..836 " "
          Error@836..840
            Str@836..840 "\"UU\""
        Whitespace@840..841 " "
        EndKw@841..844 "end"
      Whitespace@844..847 "\n  "
      ForStmt@847..885
        ForKw@847..850 "for"
        Whitespace@850..851 " "
        ForContent@851..857
          GenericFor@851..857
            Name@851..852
              Ident@851..852 "i"
            Eq@852..853 "="
            MultivalExpr@853..857
              Literal@853..854
                Number@853..854 "0"
              Comma@854..855 ","
              Literal@855..857
                Number@855..857 "99"
        Whitespace@857..858 " "
        DoKw@858..860 "do"
        Whitespace@860..861 " "
        Body@861..881
          ExprStmt@861..881
            CallExpr@861..881
              NameRef@861..867
                Ident@861..867 "assert"
              Arglist@867..881
                LParen@867..868 "("
                MultivalExpr@868..880
                  InfixExpr@868..880
                    IndexExpr@868..872
                      NameRef@868..869
                        Ident@868..869 "u"
                      LBracket@869..870 "["
                      NameRef@870..871
                        Ident@870..871 "i"
                      RBracket@871..872 "]"
                    Whitespace@872..873 " "
                    EqEq@873..875 "=="
                    Whitespace@875..876 " "
                    Literal@876..880
                      Str@876..880 "\"UU\""
                RParen@880..881 ")"
        Whitespace@881..882 " "
        EndKw@882..885 "end"
      Whitespace@885..888 "\n  "
      ForStmt@888..926
        ForKw@888..891 "for"
        Whitespace@891..892 " "
        ForContent@892..898
          GenericFor@892..898
            Name@892..893
              Ident@892..893 "i"
            Eq@893..894 "="
            MultivalExpr@894..898
              Literal@894..895
                Number@894..895 "0"
              Comma@895..896 ","
              Literal@896..898
                Number@896..898 "99"
        Whitespace@898..899 " "
        DoKw@899..901 "do"
        Whitespace@901..902 " "
        Body@902..922
          ExprStmt@902..913
            CallExpr@902..913
              NameRef@902..908
                Ident@902..908 "assert"
              Arglist@908..913
                LParen@908..909 "("
                MultivalExpr@909..913
                  IndexExpr@909..913
                    NameRef@909..910
                      Ident@909..910 "u"
                    LBracket@910..911 "["
                    NameRef@911..912
                      Ident@911..912 "i"
                    RBracket@912..913 "]"
          Whitespace@913..914 " "
          Error@914..915
            Unknown@914..915 ">"
          Error@915..916
            Eq@915..916 "="
          Whitespace@916..917 " "
          Error@917..921
            Str@917..921 "\"UU\""
          Error@921..922
            RParen@921..922 ")"
        Whitespace@922..923 " "
        EndKw@923..926 "end"
      Whitespace@926..929 "\n  "
      ForStmt@929..967
        ForKw@929..932 "for"
        Whitespace@932..933 " "
        ForContent@933..939
          GenericFor@933..939
            Name@933..934
              Ident@933..934 "i"
            Eq@934..935 "="
            MultivalExpr@935..939
              Literal@935..936
                Number@935..936 "0"
              Comma@936..937 ","
              Literal@937..939
                Number@937..939 "99"
        Whitespace@939..940 " "
        DoKw@940..942 "do"
        Whitespace@942..943 " "
        Body@943..963
          ExprStmt@943..947
            IndexExpr@943..947
              NameRef@943..944
                Ident@943..944 "u"
              LBracket@944..945 "["
              NameRef@945..946
                Ident@945..946 "i"
              RBracket@946..947 "]"
          Whitespace@947..948 " "
          Error@948..949
            Eq@948..949 "="
          Whitespace@949..950 " "
          Error@950..960
            Number@950..960 "4294967296"
          Error@960..961
            Minus@960..961 "-"
          Error@961..963
            Number@961..963 "10"
        Whitespace@963..964 " "
        EndKw@964..967 "end"
      Whitespace@967..970 "\n  "
      ForStmt@970..1017
        ForKw@970..973 "for"
        Whitespace@973..974 " "
        ForContent@974..980
          GenericFor@974..980
            Name@974..975
              Ident@974..975 "i"
            Eq@975..976 "="
            MultivalExpr@976..980
              Literal@976..977
                Number@976..977 "0"
              Comma@977..978 ","
              Literal@978..980
                Number@978..980 "99"
        Whitespace@980..981 " "
        DoKw@981..983 "do"
        Whitespace@983..984 " "
        Body@984..1013
          ExprStmt@984..1013
            CallExpr@984..1013
              NameRef@984..990
                Ident@984..990 "assert"
              Arglist@990..1013
                LParen@990..991 "("
                MultivalExpr@991..1012
                  InfixExpr@991..1012
                    IndexExpr@991..995
                      NameRef@991..992
                        Ident@991..992 "u"
                      LBracket@992..993 "["
                      NameRef@993..994
                        Ident@993..994 "i"
                      RBracket@994..995 "]"
                    Whitespace@995..996 " "
                    EqEq@996..998 "=="
                    Whitespace@998..999 " "
                    InfixExpr@999..1012
                      Literal@999..1009
                        Number@999..1009 "4294967296"
                      Minus@1009..1010 "-"
                      Literal@1010..1012
                        Number@1010..1012 "10"
                RParen@1012..1013 ")"
        Whitespace@1013..1014 " "
        EndKw@1014..1017 "end"
      Whitespace@1017..1020 "\n  "
      ForStmt@1020..1057
        ForKw@1020..1023 "for"
        Whitespace@1023..1024 " "
        ForContent@1024..1030
          GenericFor@1024..1030
            Name@1024..1025
              Ident@1024..1025 "i"
            Eq@1025..1026 "="
            MultivalExpr@1026..1030
              Literal@1026..1027
                Number@1026..1027 "0"
              Comma@1027..1028 ","
              Literal@1028..1030
                Number@1028..1030 "99"
        Whitespace@1030..1031 " "
        DoKw@1031..1033 "do"
        Whitespace@1033..1034 " "
        Body@1034..1053
          ExprStmt@1034..1045
            CallExpr@1034..1045
              NameRef@1034..1040
                Ident@1034..1040 "assert"
              Arglist@1040..1045
                LParen@1040..1041 "("
                MultivalExpr@1041..1045
                  IndexExpr@1041..1045
                    NameRef@1041..1042
                      Ident@1041..1042 "u"
                    LBracket@1042..1043 "["
                    NameRef@1043..1044
                      Ident@1043..1044 "i"
                    RBracket@1044..1045 "]"
          Whitespace@1045..1046 " "
          Error@1046..1047
            Unknown@1046..1047 "~"
          Error@1047..1048
            Eq@1047..1048 "="
          Whitespace@1048..1049 " "
          Error@1049..1050
            Minus@1049..1050 "-"
          Error@1050..1052
            Number@1050..1052 "10"
          Error@1052..1053
            RParen@1052..1053 ")"
        Whitespace@1053..1054 " "
        EndKw@1054..1057 "end"
      Whitespace@1057..1060 "\n  "
      ForStmt@1060..1100
        ForKw@1060..1063 "for"
        Whitespace@1063..1064 " "
        ForContent@1064..1070
          GenericFor@1064..1070
            Name@1064..1065
              Ident@1064..1065 "i"
            Eq@1065..1066 "="
            MultivalExpr@1066..1070
              Literal@1066..1067
                Number@1066..1067 "1"
              Comma@1067..1068 ","
              Literal@1068..1070
                Number@1068..1070 "99"
        Whitespace@1070..1071 " "
        DoKw@1071..1073 "do"
        Whitespace@1073..1074 " "
        Body@1074..1096
          ExprStmt@1074..1096
            CallExpr@1074..1096
              NameRef@1074..1080
                Ident@1074..1080 "assert"
              Arglist@1080..1096
                LParen@1080..1081 "("
                MultivalExpr@1081..1095
                  InfixExpr@1081..1095
                    IndexExpr@1081..1085
                      NameRef@1081..1082
                        Ident@1081..1082 "u"
                      LBracket@1082..1083 "["
                      NameRef@1083..1084
                        Ident@1083..1084 "i"
                      RBracket@1084..1085 "]"
                    Whitespace@1085..1086 " "
                    EqEq@1086..1088 "=="
                    Whitespace@1088..1089 " "
                    IndexExpr@1089..1095
                      NameRef@1089..1090
                        Ident@1089..1090 "u"
                      LBracket@1090..1091 "["
                      InfixExpr@1091..1094
                        NameRef@1091..1092
                          Ident@1091..1092 "i"
                        Minus@1092..1093 "-"
                        Literal@1093..1094
                          Number@1093..1094 "1"
                      RBracket@1094..1095 "]"
                RParen@1095..1096 ")"
        Whitespace@1096..1097 " "
        EndKw@1097..1100 "end"
      Whitespace@1100..1103 "\n  "
      ExprStmt@1103..1133
        CallExpr@1103..1133
          NameRef@1103..1109
            Ident@1103..1109 "assert"
          Arglist@1109..1133
            LParen@1109..1110 "("
            MultivalExpr@1110..1132
              InfixExpr@1110..1132
                InfixExpr@1110..1116
                  IndexExpr@1110..1114
                    NameRef@1110..1111
                      Ident@1110..1111 "u"
                    LBracket@1111..1112 "["
                    Literal@1112..1113
                      Number@1112..1113 "0"
                    RBracket@1113..1114 "]"
                  Plus@1114..1115 "+"
                  Literal@1115..1116
                    Number@1115..1116 "1"
                Whitespace@1116..1117 " "
                EqEq@1117..1119 "=="
                Whitespace@1119..1120 " "
                InfixExpr@1120..1132
                  Literal@1120..1130
                    Number@1120..1130 "4294967296"
                  Minus@1130..1131 "-"
                  Literal@1131..1132
                    Number@1131..1132 "9"
            RParen@1132..1133 ")"
      Whitespace@1133..1137 "\n\n  "
      ForStmt@1137..1175
        ForKw@1137..1140 "for"
        Whitespace@1140..1141 " "
        ForContent@1141..1147
          GenericFor@1141..1147
            Name@1141..1142
              Ident@1141..1142 "i"
            Eq@1142..1143 "="
            MultivalExpr@1143..1147
              Literal@1143..1144
                Number@1143..1144 "0"
              Comma@1144..1145 ","
              Literal@1145..1147
                Number@1145..1147 "99"
        Whitespace@1147..1148 " "
        DoKw@1148..1150 "do"
        Whitespace@1150..1151 " "
        Body@1151..1171
          ExprStmt@1151..1162
            CallExpr@1151..1162
              NameRef@1151..1157
                Ident@1151..1157 "assert"
              Arglist@1157..1162
                LParen@1157..1158 "("
                MultivalExpr@1158..1162
                  IndexExpr@1158..1162
                    NameRef@1158..1159
                      Ident@1158..1159 "t"
                    LBracket@1159..1160 "["
                    NameRef@1160..1161
                      Ident@1160..1161 "i"
                    RBracket@1161..1162 "]"
          Whitespace@1162..1163 " "
          Error@1163..1164
            Unknown@1163..1164 "~"
          Error@1164..1165
            Eq@1164..1165 "="
          Whitespace@1165..1166 " "
          ExprStmt@1166..1170
            IndexExpr@1166..1170
              NameRef@1166..1167
                Ident@1166..1167 "u"
              LBracket@1167..1168 "["
              NameRef@1168..1169
                Ident@1168..1169 "i"
              RBracket@1169..1170 "]"
          Error@1170..1171
            RParen@1170..1171 ")"
        Whitespace@1171..1172 " "
        EndKw@1172..1175 "end"
    Whitespace@1175..1176 "\n"
    EndKw@1176..1179 "end"
  Whitespace@1179..1181 "\n\n"
  DoStmt@1181..1393
    DoKw@1181..1183 "do"
    Whitespace@1183..1186 "\n  "
    Body@1186..1389
      ForStmt@1186..1234
        ForKw@1186..1189 "for"
        Whitespace@1189..1190 " "
        ForContent@1190..1196
          GenericFor@1190..1196
            Name@1190..1191
              Ident@1190..1191 "i"
            Eq@1191..1192 "="
            MultivalExpr@1192..1196
              Literal@1192..1193
                Number@1192..1193 "0"
              Comma@1193..1194 ","
              Literal@1194..1196
                Number@1194..1196 "99"
        Whitespace@1196..1197 " "
        DoKw@1197..1199 "do"
        Whitespace@1199..1200 " "
        Body@1200..1230
          ExprStmt@1200..1230
            CallExpr@1200..1230
              NameRef@1200..1206
                Ident@1200..1206 "assert"
              Arglist@1206..1230
                LParen@1206..1207 "("
                MultivalExpr@1207..1229
                  InfixExpr@1207..1229
                    CallExpr@1207..1221
                      DotExpr@1207..1218
                        NameRef@1207..1208
                          Ident@1207..1208 "C"
                        Dot@1208..1209 "."
                        Ident@1209..1218 "call_ei_i"
                      Arglist@1218..1221
                        LParen@1218..1219 "("
                        MultivalExpr@1219..1220
                          Literal@1219..1220
                            Number@1219..1220 "9"
                        RParen@1220..1221 ")"
                    Whitespace@1221..1222 " "
                    EqEq@1222..1224 "=="
                    Whitespace@1224..1225 " "
                    Literal@1225..1229
                      Str@1225..1229 "\"II\""
                RParen@1229..1230 ")"
        Whitespace@1230..1231 " "
        EndKw@1231..1234 "end"
      Whitespace@1234..1237 "\n  "
      ForStmt@1237..1285
        ForKw@1237..1240 "for"
        Whitespace@1240..1241 " "
        ForContent@1241..1247
          GenericFor@1241..1247
            Name@1241..1242
              Ident@1241..1242 "i"
            Eq@1242..1243 "="
            MultivalExpr@1243..1247
              Literal@1243..1244
                Number@1243..1244 "0"
              Comma@1244..1245 ","
              Literal@1245..1247
                Number@1245..1247 "99"
        Whitespace@1247..1248 " "
        DoKw@1248..1250 "do"
        Whitespace@1250..1251 " "
        Body@1251..1281
          ExprStmt@1251..1281
            CallExpr@1251..1281
              NameRef@1251..1257
                Ident@1251..1257 "assert"
              Arglist@1257..1281
                LParen@1257..1258 "("
                MultivalExpr@1258..1280
                  InfixExpr@1258..1280
                    CallExpr@1258..1272
                      DotExpr@1258..1269
                        NameRef@1258..1259
                          Ident@1258..1259 "C"
                        Dot@1259..1260 "."
                        Ident@1260..1269 "call_eu_i"
                      Arglist@1269..1272
                        LParen@1269..1270 "("
                        MultivalExpr@1270..1271
                          Literal@1270..1271
                            Number@1270..1271 "9"
                        RParen@1271..1272 ")"
                    Whitespace@1272..1273 " "
                    EqEq@1273..1275 "=="
                    Whitespace@1275..1276 " "
                    Literal@1276..1280
                      Str@1276..1280 "\"UU\""
                RParen@1280..1281 ")"
        Whitespace@1281..1282 " "
        EndKw@1282..1285 "end"
      Whitespace@1285..1288 "\n  "
      ForStmt@1288..1337
        ForKw@1288..1291 "for"
        Whitespace@1291..1292 " "
        ForContent@1292..1298
          GenericFor@1292..1298
            Name@1292..1293
              Ident@1292..1293 "i"
            Eq@1293..1294 "="
            MultivalExpr@1294..1298
              Literal@1294..1295
                Number@1294..1295 "0"
              Comma@1295..1296 ","
              Literal@1296..1298
                Number@1296..1298 "99"
        Whitespace@1298..1299 " "
        DoKw@1299..1301 "do"
        Whitespace@1301..1302 " "
        Body@1302..1333
          ExprStmt@1302..1333
            CallExpr@1302..1333
              NameRef@1302..1308
                Ident@1302..1308 "assert"
              Arglist@1308..1333
                LParen@1308..1309 "("
                MultivalExpr@1309..1332
                  InfixExpr@1309..1332
                    CallExpr@1309..1326
                      DotExpr@1309..1320
                        NameRef@1309..1310
                          Ident@1309..1310 "C"
                        Dot@1310..1311 "."
                        Ident@1311..1320 "call_i_ei"
                      Arglist@1320..1326
                        LParen@1320..1321 "("
                        MultivalExpr@1321..1325
                          Literal@1321..1325
                            Str@1321..1325 "\"II\""
                        RParen@1325..1326 ")"
                    Whitespace@1326..1327 " "
                    EqEq@1327..1329 "=="
                    Whitespace@1329..1330 " "
                    Literal@1330..1332
                      Number@1330..1332 "11"
                RParen@1332..1333 ")"
        Whitespace@1333..1334 " "
        EndKw@1334..1337 "end"
      Whitespace@1337..1340 "\n  "
      ForStmt@1340..1389
        ForKw@1340..1343 "for"
        Whitespace@1343..1344 " "
        ForContent@1344..1350
          GenericFor@1344..1350
            Name@1344..1345
              Ident@1344..1345 "i"
            Eq@1345..1346 "="
            MultivalExpr@1346..1350
              Literal@1346..1347
                Number@1346..1347 "0"
              Comma@1347..1348 ","
              Literal@1348..1350
                Number@1348..1350 "99"
        Whitespace@1350..1351 " "
        DoKw@1351..1353 "do"
        Whitespace@1353..1354 " "
        Body@1354..1385
          ExprStmt@1354..1385
            CallExpr@1354..1385
              NameRef@1354..1360
                Ident@1354..1360 "assert"
              Arglist@1360..1385
                LParen@1360..1361 "("
                MultivalExpr@1361..1384
                  InfixExpr@1361..1384
                    CallExpr@1361..1378
                      DotExpr@1361..1372
                        NameRef@1361..1362
                          Ident@1361..1362 "C"
                        Dot@1362..1363 "."
                        Ident@1363..1372 "call_i_eu"
                      Arglist@1372..1378
                        LParen@1372..1373 "("
                        MultivalExpr@1373..1377
                          Literal@1373..1377
                            Str@1373..1377 "\"UU\""
                        RParen@1377..1378 ")"
                    Whitespace@1378..1379 " "
                    EqEq@1379..1381 "=="
                    Whitespace@1381..1382 " "
                    Literal@1382..1384
                      Number@1382..1384 "11"
                RParen@1384..1385 ")"
        Whitespace@1385..1386 " "
        EndKw@1386..1389 "end"
    Whitespace@1389..1390 "\n"
    EndKw@1390..1393 "end"
  Whitespace@1393..1395 "\n\n"
  DoStmt@1395..1513
    DoKw@1395..1397 "do"
    Whitespace@1397..1400 "\n  "
    Body@1400..1509
      AssignStmt@1400..1472
        LocalKw@1400..1405 "local"
        Whitespace@1405..1406 " "
        MultiName@1406..1407
          Name@1406..1407
            Ident@1406..1407 "f"
        Whitespace@1407..1408 " "
        Eq@1408..1409 "="
        Whitespace@1409..1410 " "
        MultivalExpr@1410..1472
          CallExpr@1410..1472
            DotExpr@1410..1418
              NameRef@1410..1413
                Ident@1410..1413 "ffi"
              Dot@1413..1414 "."
              Ident@1414..1418 "cast"
            Arglist@1418..1472
              LParen@1418..1419 "("
              MultivalExpr@1419..1471
                Literal@1419..1437
                  Str@1419..1437 "\"bool (*)(enum_i)\""
                Comma@1437..1438 ","
                Whitespace@1438..1439 " "
                FunctionExpr@1439..1471
                  FunctionKw@1439..1447 "function"
                  Paramlist@1447..1450
                    LParen@1447..1448 "("
                    MultiName@1448..1449
                      Name@1448..1449
                        Ident@1448..1449 "e"
                    RParen@1449..1450 ")"
                  Whitespace@1450..1451 " "
                  Body@1451..1467
                    ReturnStmt@1451..1467
                      ReturnKw@1451..1457 "return"
                      Whitespace@1457..1458 " "
                      MultivalExpr@1458..1467
                        InfixExpr@1458..1467
                          NameRef@1458..1459
                            Ident@1458..1459 "e"
                          Whitespace@1459..1460 " "
                          EqEq@1460..1462 "=="
                          Whitespace@1462..1463 " "
                          Literal@1463..1467
                            Str@1463..1467 "\"II\""
                  Whitespace@1467..1468 " "
                  EndKw@1468..1471 "end"
              RParen@1471..1472 ")"
      Whitespace@1472..1475 "\n  "
      ExprStmt@1475..1490
        CallExpr@1475..1490
          NameRef@1475..1481
            Ident@1475..1481 "assert"
          Arglist@1481..1490
            LParen@1481..1482 "("
            MultivalExpr@1482..1489
              CallExpr@1482..1489
                NameRef@1482..1483
                  Ident@1482..1483 "f"
                Arglist@1483..1489
                  LParen@1483..1484 "("
                  MultivalExpr@1484..1488
                    Literal@1484..1488
                      Str@1484..1488 "\"II\""
                  RParen@1488..1489 ")"
            RParen@1489..1490 ")"
      Whitespace@1490..1493 "\n  "
      ExprStmt@1493..1509
        CallExpr@1493..1509
          NameRef@1493..1499
            Ident@1493..1499 "assert"
          Arglist@1499..1509
            LParen@1499..1500 "("
            MultivalExpr@1500..1508
              PrefixExpr@1500..1508
                NotKw@1500..1503 "not"
                Whitespace@1503..1504 " "
                CallExpr@1504..1508
                  NameRef@1504..1505
                    Ident@1504..1505 "f"
                  Arglist@1505..1508
                    LParen@1505..1506 "("
                    MultivalExpr@1506..1507
                      Literal@1506..1507
                        Number@1506..1507 "0"
                    RParen@1507..1508 ")"
            RParen@1508..1509 ")"
    Whitespace@1509..1510 "\n"
    EndKw@1510..1513 "end"
  Whitespace@1513..1514 "\n"

=============================
Errors:
=============================
[
    SyntaxError(
        "Expected a statement",
        434..434,
    ),
    SyntaxError(
        "Expected a statement",
        434..435,
    ),
    SyntaxError(
        "Expected a statement",
        436..436,
    ),
    SyntaxError(
        "Expected a statement",
        436..440,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        513..513,
    ),
    SyntaxError(
        "Expected a statement",
        514..514,
    ),
    SyntaxError(
        "Expected a statement",
        514..515,
    ),
    SyntaxError(
        "Expected a statement",
        515..515,
    ),
    SyntaxError(
        "Expected a statement",
        515..516,
    ),
    SyntaxError(
        "Expected a statement",
        517..517,
    ),
    SyntaxError(
        "Expected a statement",
        517..521,
    ),
    SyntaxError(
        "Expected a statement",
        521..521,
    ),
    SyntaxError(
        "Expected a statement",
        521..522,
    ),
    SyntaxError(
        "Expected a statement",
        548..548,
    ),
    SyntaxError(
        "Expected a statement",
        548..549,
    ),
    SyntaxError(
        "Expected a statement",
        550..550,
    ),
    SyntaxError(
        "Expected a statement",
        550..551,
    ),
    SyntaxError(
        "Expected a statement",
        551..551,
    ),
    SyntaxError(
        "Expected a statement",
        551..553,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        625..625,
    ),
    SyntaxError(
        "Expected a statement",
        626..626,
    ),
    SyntaxError(
        "Expected a statement",
        626..627,
    ),
    SyntaxError(
        "Expected a statement",
        627..627,
    ),
    SyntaxError(
        "Expected a statement",
        627..628,
    ),
    SyntaxError(
        "Expected a statement",
        629..629,
    ),
    SyntaxError(
        "Expected a statement",
        629..639,
    ),
    SyntaxError(
        "Expected a statement",
        639..639,
    ),
    SyntaxError(
        "Expected a statement",
        639..640,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        724..724,
    ),
    SyntaxError(
        "Expected a statement",
        725..725,
    ),
    SyntaxError(
        "Expected a statement",
        725..726,
    ),
    SyntaxError(
        "Expected a statement",
        726..726,
    ),
    SyntaxError(
        "Expected a statement",
        726..727,
    ),
    SyntaxError(
        "Expected a statement",
        728..728,
    ),
    SyntaxError(
        "Expected a statement",
        728..732,
    ),
    SyntaxError(
        "Expected a statement",
        732..732,
    ),
    SyntaxError(
        "Expected a statement",
        732..733,
    ),
    SyntaxError(
        "Expected a statement",
        765..765,
    ),
    SyntaxError(
        "Expected a statement",
        765..766,
    ),
    SyntaxError(
        "Expected a statement",
        767..767,
    ),
    SyntaxError(
        "Expected a statement",
        767..771,
    ),
    SyntaxError(
        "Expected a statement",
        834..834,
    ),
    SyntaxError(
        "Expected a statement",
        834..835,
    ),
    SyntaxError(
        "Expected a statement",
        836..836,
    ),
    SyntaxError(
        "Expected a statement",
        836..840,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        913..913,
    ),
    SyntaxError(
        "Expected a statement",
        914..914,
    ),
    SyntaxError(
        "Expected a statement",
        914..915,
    ),
    SyntaxError(
        "Expected a statement",
        915..915,
    ),
    SyntaxError(
        "Expected a statement",
        915..916,
    ),
    SyntaxError(
        "Expected a statement",
        917..917,
    ),
    SyntaxError(
        "Expected a statement",
        917..921,
    ),
    SyntaxError(
        "Expected a statement",
        921..921,
    ),
    SyntaxError(
        "Expected a statement",
        921..922,
    ),
    SyntaxError(
        "Expected a statement",
        948..948,
    ),
    SyntaxError(
        "Expected a statement",
        948..949,
    ),
    SyntaxError(
        "Expected a statement",
        950..950,
    ),
    SyntaxError(
        "Expected a statement",
        950..960,
    ),
    SyntaxError(
        "Expected a statement",
        960..960,
    ),
    SyntaxError(
        "Expected a statement",
        960..961,
    ),
    SyntaxError(
        "Expected a statement",
        961..961,
    ),
    SyntaxError(
        "Expected a statement",
        961..963,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        1045..1045,
    ),
    SyntaxError(
        "Expected a statement",
        1046..1046,
    ),
    SyntaxError(
        "Expected a statement",
        1046..1047,
    ),
    SyntaxError(
        "Expected a statement",
        1047..1047,
    ),
    SyntaxError(
        "Expected a statement",
        1047..1048,
    ),
    SyntaxError(
        "Expected a statement",
        1049..1049,
    ),
    SyntaxError(
        "Expected a statement",
        1049..1050,
    ),
    SyntaxError(
        "Expected a statement",
        1050..1050,
    ),
    SyntaxError(
        "Expected a statement",
        1050..1052,
    ),
    SyntaxError(
        "Expected a statement",
        1052..1052,
    ),
    SyntaxError(
        "Expected a statement",
        1052..1053,
    ),
    SyntaxError(
        "Expected RParen, got Unknown",
        1162..1162,
    ),
    SyntaxError(
        "Expected a statement",
        1163..1163,
    ),
    SyntaxError(
        "Expected a statement",
        1163..1164,
    ),
    SyntaxError(
        "Expected a statement",
        1164..1164,
    ),
    SyntaxError(
        "Expected a statement",
        1164..1165,
    ),
    SyntaxError(
        "Expected a statement",
        1170..1170,
    ),
    SyntaxError(
        "Expected a statement",
        1170..1171,
    ),
]
