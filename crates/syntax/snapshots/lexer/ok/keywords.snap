---
source: crates/syntax/src/tests.rs
expression: actual
input_file: crates/syntax/snapshots/lexer/ok/keywords.lua

---
[
    Token {
        kind: Comment,
        len: 31,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: AndKw,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 7,
    },
    Token {
        kind: BreakKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 5,
    },
    Token {
        kind: DoKw,
        len: 2,
    },
    Token {
        kind: Whitespace,
        len: 8,
    },
    Token {
        kind: ElseKw,
        len: 4,
    },
    Token {
        kind: Whitespace,
        len: 6,
    },
    Token {
        kind: ElseifKw,
        len: 6,
    },
    Token {
        kind: Whitespace,
        len: 4,
    },
    Token {
        kind: EndKw,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: FalseKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 5,
    },
    Token {
        kind: ForKw,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 7,
    },
    Token {
        kind: FunctionKw,
        len: 8,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: GotoKw,
        len: 4,
    },
    Token {
        kind: Whitespace,
        len: 6,
    },
    Token {
        kind: IfKw,
        len: 2,
    },
    Token {
        kind: Whitespace,
        len: 8,
    },
    Token {
        kind: InKw,
        len: 2,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: LocalKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 5,
    },
    Token {
        kind: NilKw,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 7,
    },
    Token {
        kind: NotKw,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 7,
    },
    Token {
        kind: OrKw,
        len: 2,
    },
    Token {
        kind: Whitespace,
        len: 8,
    },
    Token {
        kind: RepeatKw,
        len: 6,
    },
    Token {
        kind: Whitespace,
        len: 4,
    },
    Token {
        kind: ReturnKw,
        len: 6,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: ThenKw,
        len: 4,
    },
    Token {
        kind: Whitespace,
        len: 6,
    },
    Token {
        kind: TrueKw,
        len: 4,
    },
    Token {
        kind: Whitespace,
        len: 6,
    },
    Token {
        kind: UntilKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 5,
    },
    Token {
        kind: WhileKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 2,
    },
    Token {
        kind: LocalKw,
        len: 5,
    },
    Token {
        kind: Whitespace,
        len: 1,
    },
    Token {
        kind: Ident,
        len: 3,
    },
    Token {
        kind: Whitespace,
        len: 1,
    },
    Token {
        kind: Eq,
        len: 1,
    },
    Token {
        kind: Whitespace,
        len: 1,
    },
    Token {
        kind: Str,
        len: 6,
    },
    Token {
        kind: Whitespace,
        len: 1,
    },
]
