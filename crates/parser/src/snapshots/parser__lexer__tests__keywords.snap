---
source: crates/parser/src/lexer.rs
expression: tokens

---
[
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 0..1,
            },
            "\n",
        ),
    ),
    Ok(
        (
            Token {
                kind: Comment,
                range: 1..33,
            },
            "-- taken from the lua reference\n",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 33..34,
            },
            " ",
        ),
    ),
    Ok(
        (
            Token {
                kind: AndKw,
                range: 34..37,
            },
            "and",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 37..44,
            },
            "       ",
        ),
    ),
    Ok(
        (
            Token {
                kind: BreakKw,
                range: 44..49,
            },
            "break",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 49..54,
            },
            "     ",
        ),
    ),
    Ok(
        (
            Token {
                kind: DoKw,
                range: 54..56,
            },
            "do",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 56..64,
            },
            "        ",
        ),
    ),
    Ok(
        (
            Token {
                kind: ElseKw,
                range: 64..68,
            },
            "else",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 68..74,
            },
            "      ",
        ),
    ),
    Ok(
        (
            Token {
                kind: ElseifKw,
                range: 74..80,
            },
            "elseif",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 80..84,
            },
            "    ",
        ),
    ),
    Ok(
        (
            Token {
                kind: EndKw,
                range: 84..87,
            },
            "end",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 87..89,
            },
            "\n ",
        ),
    ),
    Ok(
        (
            Token {
                kind: FalseKw,
                range: 89..94,
            },
            "false",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 94..99,
            },
            "     ",
        ),
    ),
    Ok(
        (
            Token {
                kind: ForKw,
                range: 99..102,
            },
            "for",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 102..109,
            },
            "       ",
        ),
    ),
    Ok(
        (
            Token {
                kind: FunctionKw,
                range: 109..117,
            },
            "function",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 117..119,
            },
            "  ",
        ),
    ),
    Ok(
        (
            Token {
                kind: GotoKw,
                range: 119..123,
            },
            "goto",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 123..129,
            },
            "      ",
        ),
    ),
    Ok(
        (
            Token {
                kind: IfKw,
                range: 129..131,
            },
            "if",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 131..139,
            },
            "        ",
        ),
    ),
    Ok(
        (
            Token {
                kind: InKw,
                range: 139..141,
            },
            "in",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 141..143,
            },
            "\n ",
        ),
    ),
    Ok(
        (
            Token {
                kind: LocalKw,
                range: 143..148,
            },
            "local",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 148..153,
            },
            "     ",
        ),
    ),
    Ok(
        (
            Token {
                kind: NilKw,
                range: 153..156,
            },
            "nil",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 156..163,
            },
            "       ",
        ),
    ),
    Ok(
        (
            Token {
                kind: NotKw,
                range: 163..166,
            },
            "not",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 166..173,
            },
            "       ",
        ),
    ),
    Ok(
        (
            Token {
                kind: OrKw,
                range: 173..175,
            },
            "or",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 175..183,
            },
            "        ",
        ),
    ),
    Ok(
        (
            Token {
                kind: RepeatKw,
                range: 183..189,
            },
            "repeat",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 189..193,
            },
            "    ",
        ),
    ),
    Ok(
        (
            Token {
                kind: ReturnKw,
                range: 193..199,
            },
            "return",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 199..201,
            },
            "\n ",
        ),
    ),
    Ok(
        (
            Token {
                kind: ThenKw,
                range: 201..205,
            },
            "then",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 205..211,
            },
            "      ",
        ),
    ),
    Ok(
        (
            Token {
                kind: TrueKw,
                range: 211..215,
            },
            "true",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 215..221,
            },
            "      ",
        ),
    ),
    Ok(
        (
            Token {
                kind: UntilKw,
                range: 221..226,
            },
            "until",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 226..231,
            },
            "     ",
        ),
    ),
    Ok(
        (
            Token {
                kind: WhileKw,
                range: 231..236,
            },
            "while",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 236..238,
            },
            "\n ",
        ),
    ),
    Ok(
        (
            Token {
                kind: LocalKw,
                range: 238..243,
            },
            "local",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 243..244,
            },
            " ",
        ),
    ),
    Ok(
        (
            Token {
                kind: Ident,
                range: 244..247,
            },
            "var",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 247..248,
            },
            " ",
        ),
    ),
    Ok(
        (
            Token {
                kind: Eq,
                range: 248..249,
            },
            "=",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 249..250,
            },
            " ",
        ),
    ),
    Ok(
        (
            Token {
                kind: Str,
                range: 250..256,
            },
            "\"asdf\"",
        ),
    ),
    Ok(
        (
            Token {
                kind: Whitespace,
                range: 256..269,
            },
            "\n            ",
        ),
    ),
]
